var documenterSearchIndex = {"docs":
[{"location":"Testing/test/","page":"-","title":"-","text":"","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"author: \"Chris Rackauckas\" title: \"Test\" –-","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"This is a test of the builder system.  It often gets bumped manually.","category":"page"},{"location":"Testing/test/#Appendix","page":"-","title":"Appendix","text":"","category":"section"},{"location":"Testing/test/","page":"-","title":"-","text":"These tutorials are a part of the SciMLTutorials.jl repository, found at: https://github.com/SciML/SciMLTutorials.jl. For more information on high-performance scientific machine learning, check out the SciML Open Source Software Organization https://sciml.ai.","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"To locally run this tutorial, do the following commands:","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"using SciMLTutorials\nSciMLTutorials.weave_file(\"Testing\",\"test.jmd\")","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"Computer Information:","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"Julia Version 1.6.5\nCommit 9058264a69 (2021-12-19 12:30 UTC)\nPlatform Info:\n  OS: Linux (x86_64-pc-linux-gnu)\n  CPU: AMD EPYC 7502 32-Core Processor\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-11.0.1 (ORCJIT, znver2)\nEnvironment:\n  JULIA_CPU_THREADS = 16\n  BUILDKITE_PLUGIN_JULIA_CACHE_DIR = /cache/julia-buildkite-plugin\n  JULIA_DEPOT_PATH = /cache/julia-buildkite-plugin/depots/a6029d3a-f78b-41ea-bc97-28aa57c6c6ea\n","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"Package Information:","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"      Status `/cache/build/default-amdci4-1/julialang/scimltutorials-dot-jl/tutorials/Testing/Project.toml`\n  [30cb0354] SciMLTutorials v0.9.0","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"And the full manifest:","category":"page"},{"location":"Testing/test/","page":"-","title":"-","text":"      Status `/cache/build/default-amdci4-1/julialang/scimltutorials-dot-jl/tutorials/Testing/Manifest.toml`\n  [79e6a3ab] Adapt v3.3.0\n  [35d6a980] ColorSchemes v3.12.1\n  [3da002f7] ColorTypes v0.11.0\n  [5ae59095] Colors v0.12.8\n  [34da2185] Compat v3.30.0\n  [8f4d0f93] Conda v1.5.2\n  [d38c429a] Contour v0.5.7\n  [9a962f9c] DataAPI v1.6.0\n  [864edb3b] DataStructures v0.18.9\n  [e2d170a0] DataValueInterfaces v1.0.0\n  [ffbed154] DocStringExtensions v0.8.4\n  [c87230d0] FFMPEG v0.4.0\n  [53c48c17] FixedPointNumbers v0.8.4\n  [59287772] Formatting v0.4.2\n  [28b8d3ca] GR v0.57.4\n  [5c1252a2] GeometryBasics v0.3.12\n  [42e2da0e] Grisu v1.0.2\n  [cd3eb016] HTTP v0.9.9\n  [eafb193a] Highlights v0.4.5\n  [7073ff75] IJulia v1.23.2\n  [83e8ac13] IniFile v0.5.0\n  [c8e1da08] IterTools v1.3.0\n  [82899510] IteratorInterfaceExtensions v1.0.0\n  [692b3bcd] JLLWrappers v1.3.0\n  [682c06a0] JSON v0.21.1\n  [b964fa9f] LaTeXStrings v1.2.1\n  [23fbe1c1] Latexify v0.15.5\n  [1914dd2f] MacroTools v0.5.6\n  [739be429] MbedTLS v1.0.3\n  [442fdcdd] Measures v0.3.1\n  [e1d29d7a] Missings v1.0.0\n  [ffc61752] Mustache v1.0.10\n  [77ba4419] NaNMath v0.3.5\n  [bac558e1] OrderedCollections v1.4.1\n  [69de0a69] Parsers v1.1.0\n  [ccf2f8ad] PlotThemes v2.0.1\n  [995b91a9] PlotUtils v1.0.10\n  [91a5bcdd] Plots v1.15.2\n  [21216c6a] Preferences v1.2.2\n  [3cdcf5f2] RecipesBase v1.1.1\n  [01d81517] RecipesPipeline v0.3.2\n  [189a3867] Reexport v1.0.0\n  [ae029012] Requires v1.1.3\n  [30cb0354] SciMLTutorials v0.9.0\n  [6c6a2e73] Scratch v1.0.3\n  [992d4aef] Showoff v1.0.3\n  [b85f4697] SoftGlobalScope v1.1.0\n  [a2af1166] SortingAlgorithms v1.0.0\n  [90137ffa] StaticArrays v1.2.0\n  [82ae8749] StatsAPI v1.0.0\n  [2913bbd2] StatsBase v0.33.8\n  [09ab397b] StructArrays v0.5.1\n  [3783bdb8] TableTraits v1.0.1\n  [bd369af6] Tables v1.4.2\n  [5c2747f8] URIs v1.3.0\n  [81def892] VersionParsing v1.2.0\n  [44d3d7a6] Weave v0.10.8\n  [ddb6d928] YAML v0.4.6\n  [c2297ded] ZMQ v1.2.1\n  [6e34b625] Bzip2_jll v1.0.6+5\n  [83423d85] Cairo_jll v1.16.0+6\n  [5ae413db] EarCut_jll v2.1.5+1\n  [2e619515] Expat_jll v2.2.10+0\n  [b22a6f82] FFMPEG_jll v4.3.1+4\n  [a3f928ae] Fontconfig_jll v2.13.1+14\n  [d7e528f0] FreeType2_jll v2.10.1+5\n  [559328eb] FriBidi_jll v1.0.5+6\n  [0656b61e] GLFW_jll v3.3.4+0\n  [d2c73de3] GR_jll v0.57.2+0\n  [78b55507] Gettext_jll v0.21.0+0\n  [7746bdde] Glib_jll v2.68.1+0\n  [aacddb02] JpegTurbo_jll v2.0.1+3\n  [c1c5ebd0] LAME_jll v3.100.0+3\n  [dd4b983a] LZO_jll v2.10.1+0\n  [dd192d2f] LibVPX_jll v1.9.0+1\n  [e9f186c6] Libffi_jll v3.2.2+0\n  [d4300ac3] Libgcrypt_jll v1.8.7+0\n  [7e76a0d4] Libglvnd_jll v1.3.0+3\n  [7add5ba3] Libgpg_error_jll v1.42.0+0\n  [94ce4f54] Libiconv_jll v1.16.1+0\n  [4b2f31a3] Libmount_jll v2.35.0+0\n  [89763e89] Libtiff_jll v4.1.0+2\n  [38a345b3] Libuuid_jll v2.36.0+0\n  [e7412a2a] Ogg_jll v1.3.4+2\n  [458c3c95] OpenSSL_jll v1.1.1+6\n  [91d4177d] Opus_jll v1.3.1+3\n  [2f80f16e] PCRE_jll v8.44.0+0\n  [30392449] Pixman_jll v0.40.1+0\n  [ea2cea3b] Qt5Base_jll v5.15.2+0\n  [a2964d1f] Wayland_jll v1.17.0+4\n  [2381bf8a] Wayland_protocols_jll v1.18.0+4\n  [02c8fc9c] XML2_jll v2.9.12+0\n  [aed1982a] XSLT_jll v1.1.34+0\n  [4f6342f7] Xorg_libX11_jll v1.6.9+4\n  [0c0b7dd1] Xorg_libXau_jll v1.0.9+4\n  [935fb764] Xorg_libXcursor_jll v1.2.0+4\n  [a3789734] Xorg_libXdmcp_jll v1.1.3+4\n  [1082639a] Xorg_libXext_jll v1.3.4+4\n  [d091e8ba] Xorg_libXfixes_jll v5.0.3+4\n  [a51aa0fd] Xorg_libXi_jll v1.7.10+4\n  [d1454406] Xorg_libXinerama_jll v1.1.4+4\n  [ec84b674] Xorg_libXrandr_jll v1.5.2+4\n  [ea2f1a96] Xorg_libXrender_jll v0.9.10+4\n  [14d82f49] Xorg_libpthread_stubs_jll v0.1.0+3\n  [c7cfdc94] Xorg_libxcb_jll v1.13.0+3\n  [cc61e674] Xorg_libxkbfile_jll v1.1.0+4\n  [12413925] Xorg_xcb_util_image_jll v0.4.0+1\n  [2def613f] Xorg_xcb_util_jll v0.4.0+1\n  [975044d2] Xorg_xcb_util_keysyms_jll v0.4.0+1\n  [0d47668e] Xorg_xcb_util_renderutil_jll v0.3.9+1\n  [c22f9ab0] Xorg_xcb_util_wm_jll v0.4.1+1\n  [35661453] Xorg_xkbcomp_jll v1.4.2+4\n  [33bec58e] Xorg_xkeyboard_config_jll v2.27.0+4\n  [c5fb5394] Xorg_xtrans_jll v1.4.0+3\n  [8f1865be] ZeroMQ_jll v4.3.2+6\n  [3161d3a3] Zstd_jll v1.5.0+0\n  [0ac62f75] libass_jll v0.14.0+4\n  [f638f0a6] libfdk_aac_jll v0.1.6+4\n  [b53b4c65] libpng_jll v1.6.38+0\n  [a9144af2] libsodium_jll v1.0.20+0\n  [f27f6e37] libvorbis_jll v1.3.6+6\n  [1270edf5] x264_jll v2020.7.14+2\n  [dfaa095f] x265_jll v3.0.0+3\n  [d8fb68d0] xkbcommon_jll v0.9.1+5\n  [0dad84c5] ArgTools\n  [56f22d72] Artifacts\n  [2a0f44e3] Base64\n  [ade2ca70] Dates\n  [8bb1440f] DelimitedFiles\n  [8ba89e20] Distributed\n  [f43a241f] Downloads\n  [7b1f6079] FileWatching\n  [b77e0a4c] InteractiveUtils\n  [b27032c2] LibCURL\n  [76f85450] LibGit2\n  [8f399da3] Libdl\n  [37e2e46d] LinearAlgebra\n  [56ddb016] Logging\n  [d6f4376e] Markdown\n  [a63ad114] Mmap\n  [ca575930] NetworkOptions\n  [44cfe95a] Pkg\n  [de0858da] Printf\n  [3fa0cd96] REPL\n  [9a3f8284] Random\n  [ea8e919c] SHA\n  [9e88b42a] Serialization\n  [1a1011a3] SharedArrays\n  [6462fe0b] Sockets\n  [2f01184e] SparseArrays\n  [10745b16] Statistics\n  [fa267f1f] TOML\n  [a4e569a6] Tar\n  [8dfed614] Test\n  [cf7118a7] UUIDs\n  [4ec0a83e] Unicode\n  [e66e0078] CompilerSupportLibraries_jll\n  [deac9b47] LibCURL_jll\n  [29816b5a] LibSSH2_jll\n  [c8ffd9c3] MbedTLS_jll\n  [14a3606d] MozillaCACerts_jll\n  [83775a58] Zlib_jll\n  [8e850ede] nghttp2_jll\n  [3f19e933] p7zip_jll","category":"page"},{"location":"exercises/01-workshop_exercises/#SciML-Workshop-Exercises","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"These exercises teach common workflows which involve SciML's tools like DifferentialEquations.jl, DiffEqFlux.jl, and the connections to parts like stochastic differential equations and Bayesian estimation. The designation (B) is for \"Beginner\", meaning that a user new to the package should feel comfortable trying this exercise. An exercise designated (I) is for \"Intermediate\", meaning the user may want to have some previous background in DifferentialEquations.jl or try some (B) exercises first. The additional (E) designation is for \"Experienced\", which are portions of exercises which may take some work.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"The exercises are described as follows:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Exercise 1 takes the user through solving a stiff ordinary differential equation and using the ModelingToolkit.jl to automatically convert the function to a symbolic form to derive the analytical Jacobian to speed up the solver. The same biological system is then solved with stochasticity, utilizing EnsembleProblems to understand 95% bounds on the solution. Finally, probabilistic programming is employed to perform Bayesian parameter estimation of the parameters against data.\nExercise 2 takes the user through defining hybrid delay differential equation, that is a differential equation with events, and using differentiable programming techniques (automatic differentiation) to to perform gradient-based parameter estimation.\nExercise 3 takes the user through differential-algebraic equation (DAE) modeling, the concept of index, and using both mass-matrix and implicit ODE representations. This will require doing a bit of math, but the student will understand how to change their equations to make their DAE numerically easier for the integrators.\nExercise 4 takes the user through optimizing a PDE solver, utilizing automatic sparsity pattern recognition, automatic conversion of numerical codes to symbolic codes for analytical construction of the Jacobian, preconditioned GMRES, and setting up a solver for IMEX and GPUs, and compute adjoints of PDEs.\nExercise 5 focuses on a chaotic orbit, utilizing parallel ensembles across supercomputers and GPUs to quickly describe phase space.\nExercise 6 takes the user through training a neural stochastic differential equation, using GPU-accleration and adjoints through Flux.jl's neural network framework to build efficient training codes.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"This exercise worksheet is meant to be a living document leading new users through a deep dive of the DifferentialEquations.jl feature set. If you further suggestions or want to contribute new problems, please open an issue or PR at the SciMLTutorials.jl repository.","category":"page"},{"location":"exercises/01-workshop_exercises/#Problem-1:-Investigating-Sources-of-Randomness-and-Uncertainty-in-a-Stiff-Biological-System-(B)","page":"SciML Workshop Exercises","title":"Problem 1: Investigating Sources of Randomness and Uncertainty in a Stiff Biological System (B)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In this problem we will walk through the basics of simulating models with DifferentialEquations.jl. Let's take the Oregonator model of the Belousov-Zhabotinskii chemical reaction system. This system describes a classical example in non-equilibrium thermodynmics and is a well-known natural chemical oscillator.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-1:-Simulating-the-Oregonator-ODE-model","page":"SciML Workshop Exercises","title":"Part 1: Simulating the Oregonator ODE model","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"When modeling, usually one starts off by investigating the deterministic model. The deterministic ODE formulation of the Oregonator is given by the equations","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\nfracdxdt = s(y-xy + x - qx^2)\nfracdydt = (-y - xy + z)s\nfracdzdt = w(x - z)endalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"with parameter values s=7727, w=0161, and q=8375 times 10^-6, and initial conditions x(0)=1, y(0)=2, and z(0)=3. Use the tutorial on solving ODEs to solve this differential equation on the timespan of tin0360 with the default ODE solver. To investigate the result, plot the solution of all components over time, and plot the phase space plot of the solution (hint: use vars=(1,2,3)). What shape is being drawn in phase space?","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-2:-Investigating-Stiffness","page":"SciML Workshop Exercises","title":"Part 2: Investigating Stiffness","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Because the reaction rates of q vs s is very large, this model has a \"fast\" system and a \"slow\" system. This is typical of ODEs which exhibit a property known as stiffness. Stiffness changes the ODE solvers which can handle the equation well. Take a look at the ODE solver page and investigate solving the equation using methods for non-stiff equations (ex: Tsit5) and stiff equations (ex: Rodas5).","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Benchmark using tin050 using @btime from BenchmarkTools.jl. What happens when you increase the timespan?","category":"page"},{"location":"exercises/01-workshop_exercises/#(Optional)-Part-3:-Specifying-Analytical-Jacobians-(I)","page":"SciML Workshop Exercises","title":"(Optional) Part 3: Specifying Analytical Jacobians (I)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Stiff ODE solvers internally utilize the Jacobian of the ODE system in order to improve the stepsizes in the solution. However, computing and factorizing the Jacobian is costly, and thus it can be beneficial to provide the analytical solution.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the ODEFunction definition page to define an ODEFunction which holds both the OREGO ODE and its Jacobian, and solve using Rodas5.","category":"page"},{"location":"exercises/01-workshop_exercises/#(Optional)-Part-4:-Automatic-Symbolicification-and-Analytical-Jacobian-Calculations","page":"SciML Workshop Exercises","title":"(Optional) Part 4: Automatic Symbolicification and Analytical Jacobian Calculations","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Deriving Jacobians by hand is tedious. Thankfully symbolic mathematical systems can do the work for you. And thankfully, DifferentialEquations.jl has tools to automatically convert numerical problems into symbolic problems to perform the analysis on!","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"follow the ModelingToolkit.jl README to automatically convert your ODE definition to its symbolic form using modelingtoolkitize and calculate the analytical Jacobian. Use the compilation functions to build the ODEFunction with the embedded analytical solution.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-5:-Adding-stochasticity-with-stochastic-differential-equations","page":"SciML Workshop Exercises","title":"Part 5: Adding stochasticity with stochastic differential equations","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"How does this system react in the presense of stochasticity? We can investigate this question by using stochastic differential equations. A stochastic differential equation formulation of this model is known as the multiplicative noise model, is created with:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\ndx = s(y-xy + x - qx^2)dt + sigma_1 x dW_1\ndy = frac-y - xy + zsdt + sigma_2 y dW_2\ndz = w(x - z)dt + sigma_3 z dW_3endalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"with sigma_i = 01 where the dW terms describe a Brownian motion, a continuous random process with normally distributed increments. Use the tutorial on solving SDEs to solve simulate this model. Then, use the EnsembleProblem to generate and plot 100 trajectories of the stochastic model, and use EnsembleSummary to plot the mean and 5%-95% region over time.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Try solving with the ImplicitRKMil and SOSRI methods. Notice that it isn't stiff every single time!","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"(For fun, see if you can make the Euler-Maruyama EM() method solve this equation. This requires a choice of dt small enough to be stable. This is the \"standard\" method!)","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-6:-Gillespie-jump-models-of-discrete-stochasticity","page":"SciML Workshop Exercises","title":"Part 6: Gillespie jump models of discrete stochasticity","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"When biological models have very few particles, continuous models no longer make sense, and instead using the full discrete formulation can be required to accuracy describe the dynamics. A discrete differential equation, or Gillespie model, is a continuous-time Markov chain with Poisson-distributed jumps. A discrete description of the Oregonator model is given by a chemical reaction systems:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"\nA+Y -> X+P\nX+Y -> 2P\nA+X -> 2X + 2Z\n2X  -> A + P (note: this has rate kX^2!)\nB + Z -> Y","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"where reactions take place at a rate which is propoertional to its components, i.e. the first reaction has a rate k*A*Y for some k. Use the tutorial on Gillespie SSA models to implement the JumpProblem for this model, and use the EnsembleProblem and EnsembleSummary to characterize the stochastic trajectories.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"For what rate constants does the model give the oscillatory dynamics for the ODE approximation? For information on the true reaction rates, consult the original paper.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-7:-Probabilistic-Programming-/-Bayesian-Parameter-Estimation-with-DiffEqBayes.jl-Turing.jl-(I)","page":"SciML Workshop Exercises","title":"Part 7: Probabilistic Programming / Bayesian Parameter Estimation with DiffEqBayes.jl + Turing.jl (I)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In many casees, one comes to understand the proper values for their model's parameters by utilizing data fitting techniques. In this case, we will use the DiffEqBayes.jl library to perform a Bayesian estimation of the parameters. For our data we will the following potential output:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"\nt = 0.0:1.0:30.0\ndata = [1.0 2.05224 2.11422 2.1857 2.26827 2.3641 2.47618 2.60869 2.7677 2.96232 3.20711 3.52709 3.97005 4.64319 5.86202 9.29322 536.068 82388.9 57868.4 1.00399 1.00169 1.00117 1.00094 1.00082 1.00075 1.0007 1.00068 1.00066 1.00065 1.00065 1.00065\n        2.0 1.9494 1.89645 1.84227 1.78727 1.73178 1.67601 1.62008 1.56402 1.50772 1.45094 1.39322 1.33366 1.2705 1.19958 1.10651 0.57194 0.180316 0.431409 251.774 591.754 857.464 1062.78 1219.05 1335.56 1419.88 1478.22 1515.63 1536.25 1543.45 1539.98\n        3.0 2.82065 2.68703 2.58974 2.52405 2.48644 2.47449 2.48686 2.52337 2.58526 2.67563 2.80053 2.9713 3.21051 3.5712 4.23706 12.0266 14868.8 24987.8 23453.4 19202.2 15721.6 12872.0 10538.8 8628.66 7064.73 5784.29 4735.96 3877.66 3174.94 2599.6]","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Follow the exmaples on the parameter estimation page to perform a Bayesian parameter estimation. What are the most likely parameters for the model given the posterior parameter distributions?","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the ODEProblem to perform the fit. If you have time, use the EnsembleProblem of SDEProblems to perform a fit over averages of the SDE solutions. Note that the SDE fit will take significantly more computational resources! See the GPU parallelism section for details on how to accelerate this.","category":"page"},{"location":"exercises/01-workshop_exercises/#(Optional)-Part-8:-Using-DiffEqBiological's-Reaction-Network-DSL","page":"SciML Workshop Exercises","title":"(Optional) Part 8: Using DiffEqBiological's Reaction Network DSL","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"DiffEqBiological.jl is a helper library for the DifferentialEquations.jl ecosystem for defining chemical reaction systems at a high leevel for easy simulation in these various forms. Use the descrption from the Chemical Reaction Networks documentation page to build a reaction network and generate the ODE/SDE/jump equations, and compare the result to your handcoded versions.","category":"page"},{"location":"exercises/01-workshop_exercises/#Problem-2:-Fitting-Hybrid-Delay-Pharmacokinetic-Models-with-Automated-Responses-(B)","page":"SciML Workshop Exercises","title":"Problem 2: Fitting Hybrid Delay Pharmacokinetic Models with Automated Responses (B)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Hybrid differential equations are differential equations with events, where events are some interaction that occurs according to a prespecified condition. For example, the bouncing ball is a classic hybrid differential equation given by an ODE (Newton's Law of Gravity) mixed with the fact that, whenever the ball hits the floor (x=0), then the velocity of the ball flips (v=-v).","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In addition, many models incorporate delays, that is the driving force of the equation is dependent not on the current values, but values from the past. These delay differential equations model how individuals in the economy act on old information, or that biological processes take time to adapt to a new environment.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In this equation we will build a hybrid delayed pharmacokinetic model and use the parameter estimation techniques to fit this it to a data.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-1:-Defining-an-ODE-with-Predetermined-Doses","page":"SciML Workshop Exercises","title":"Part 1: Defining an ODE with Predetermined Doses","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"First, let's define the simplest hybrid ordinary differential equation: an ODE where the events take place at fixed times. The ODE we will use is known as the one-compartment model:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\nfracdDepotdt = -K_a Depot + R\nfracdCentraldt = K_a Depot - K_e Centralendalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"with t in 090, u_0 = 10000, and p=K_aK_e=2268007398.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"With this model, use the event handling documentation page to define a DiscreteCallback which fires at t ∈ [24,48,72] and adds a dose of 100 into [Depot]. (Hint: you'll want to set tstops=[24,48,72] to force the ODE solver to step at these times).","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-2:-Adding-Delays","page":"SciML Workshop Exercises","title":"Part 2: Adding Delays","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Now let's assume that instead of there being one compartment, there are many transit compartment that the drug must move through in order to reach the central compartment. This effectively delays the effect of the transition from [Depot] to [Central]. To model this effect, we will use the delay differential equation which utilizes a fixed time delay tau:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\nfracdDepotdt = -K_a Depot(t)\nfracdCentraldt = K_a Depot(t-tau) - K_e Centralendalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"where the parameter τ = 60. Use the DDE tutorial to define and solve this delayed version of the hybrid model.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-3:-Automatic-Differentiation-(AD)-for-Optimization-(I)","page":"SciML Workshop Exercises","title":"Part 3: Automatic Differentiation (AD) for Optimization (I)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In order to fit parameters (K_aK_etau) we will want to be able to calculate the gradient of the solution with respect to the initial conditions. One way to do this is via Automatic Differentition (AD). For small numbers of parameters (<100), it is fastest to use Forward-Mode Automatic Differentition (even faster than using adjoint sensitivity analysis!). Thus for this problem we will make use of ForwardDiff.jl to use Dual number arithmetic to retrive both the solution and its derivative w.r.t. parameters in a single solve.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the information from the page on local sensitvity analysis to define the input dual numbers, solve the equation, and plot both the solution over time and the derivative of the solution w.r.t. the parameters.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-4:-Fitting-Known-Quantities-with-DiffEqParamEstim.jl-Optim.jl","page":"SciML Workshop Exercises","title":"Part 4: Fitting Known Quantities with DiffEqParamEstim.jl + Optim.jl","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Now let's fit the delayed model to a dataset. For the data, use the array","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"\nt = 0.0:12.0:90.0\ndata = [100.0 0.246196 0.000597933 0.24547 0.000596251 0.245275 0.000595453 0.245511\n        0.0 53.7939 16.8784 58.7789 18.3777 59.1879 18.5003 59.2611]","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the parameter estimation page to define a loss function with build_loss_objective and optimize the parameters against the data. What parameters were used to generate the data?","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-5:-Implementing-Control-Based-Logic-with-ContinuousCallbacks-(I)","page":"SciML Workshop Exercises","title":"Part 5: Implementing Control-Based Logic with ContinuousCallbacks (I)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Now that we have fit our delay differential equation model to the dataset, we want to start testing out automated treatment strategies. Let's assume that instead of giving doses at fixed time points, we invent a wearable which monitors the patient and administers a dose whenever the internal drug concentration falls below 25. To model this effect, we will need to use ContinuousCallbacks to define a callback that triggers when [Central] falls below the threshold value.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the documentation on the event handling page to define such a callback, and plot the solution over time. How many times does the auto-doser administer a dose? How much does this change as you change the delay time tau?","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-6:-Global-Sensitivity-Analysis-with-the-Morris-and-Sobol-Methods","page":"SciML Workshop Exercises","title":"Part 6: Global Sensitivity Analysis with the Morris and Sobol Methods","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"To understand how the parameters effect the solution in a global sense, one wants to use Global Sensitivity Analysis. Use the GSA documentation page perform global sensitivity analysis and quantify the effect of the various parameters on the solution.","category":"page"},{"location":"exercises/01-workshop_exercises/#Problem-3:-Differential-Algebraic-Equation-Modeling-of-a-Double-Pendulum-(B)","page":"SciML Workshop Exercises","title":"Problem 3: Differential-Algebraic Equation Modeling of a Double Pendulum (B)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Differential-Algebraic Equaton (DAE) systems are like ODEs but allow for adding constraints into the models. This problem will look at solving the double penulum problem with enforcement of the rigid body constraints, requiring that the total distance L is constant throughout the simulation. While these equations can be rewritten in an ODE form, in many cases it can be simpler to solve the equation directly with the constraints. This tutorial will cover both the idea of index, how to manually perform index reduction, and how to make use of mass matrix and implicit ODE solvers to handle these problems.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-1:-Simple-Introduction-to-DAEs:-Mass-Matrix-Robertson-Equations","page":"SciML Workshop Exercises","title":"Part 1: Simple Introduction to DAEs: Mass-Matrix Robertson Equations","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"A mass-matrix ordinary differential equation (ODE) is an ODE where the left-hand side, the derivative side, is multiplied by a matrix known as the mass matrix. This is described as:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Mu = f(upt)","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"where M is the mass matrix. When M is invertible, there is an ODE which is equivalent to this formulation. When M is not invertible, this can have a distinctly different behavior and is as Differential-Algebraic Equation (DAE).","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Solve the Robertson DAE:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\nfracdy_1dt = -004y_1 + 10^4 y_2y_3\nfracdy_2dt =  004y_1 - 10^4 y_2y_3 - 3times 10^7 y_2^2\n1 = y_1 + y_2 + y_3endalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"with y(0) = 100 and dy(0) = -00400400 using the mass-matrix formulation and Rodas5(). Use the ODEProblem page to find out how to declare a mass matrix.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"(Hint: what if the last row has all zeros?)","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-2:-Solving-the-Implicit-Robertson-Equations-with-IDA","page":"SciML Workshop Exercises","title":"Part 2: Solving the Implicit Robertson Equations with IDA","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the DAE Tutorial to define a DAE in its implicit form and solve the Robertson equation with IDA. Why is differential_vars = [true,true,false]?","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-3:-Manual-Index-Reduction-of-the-Single-Pendulum","page":"SciML Workshop Exercises","title":"Part 3: Manual Index Reduction of the Single Pendulum","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"The index of a DAE is a notion used to measure distance from its related ODE. There are many different definitions of index, but we're going to stick to the idea of differential index: the number of differentiations required to convert a system of DAEs into explicit ODE form. DAEs of high index are usually transformed via a procedure called index reduction. The following example will demonstrate this.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Consider the index 3 DAE system of the cartesian pendulum. After writing down the force equations in both directions, we arrive at the following DAE:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"\nbeginalign\nmddotx = fracxLT \nmddoty = fracyLT - mg \nx^2 + y^2 = L\nendalign\n\n\nNotice that we dont have an equation describing the\nbehaviour of T Let us now perform index reduction to\nextract an equation for T\n\nDifferentiate this third equation twice with respect to time\nto reduce it from index 3 to index 1\n\n Part 4 Single Pendulum Solution with IDA\nWrite these equations in implicit form and solve the system using\nIDA\n\n Part 5 Solving the Double Penulum DAE System\n\nThe following equations describe a double\npendulum system\n\nbeginalign\nm_2ddotx_2 = fracx_2L_2T_2 \nm_2ddoty_2 = fracy_2L_2T_2 - m_2g \nx_2^2 + y_2^2 = L_2 \nm_1ddotx_1 = fracx_1L_1T_1 - fracx_2L_2T_2 \nm_2ddoty_1 = fracy_1L_1T_2 - m_1g - fracy_2L_2T_2 \nx_1^2 + y_1^2 = L_1 \nendalign\n\n\nPerform index reduction and solve it like in the previous example\n\n Problem 4 Performance Optimizing and Parallelizing Semilinear PDE Solvers (I)\n\nThis problem will focus on implementing and optimizing the solution of the\n2-dimensional Brusselator equations The BRUSS equations are a well-known\nhighly stiff oscillatory system of partial differential equations which are\nused in stiff ODE solver benchmarks In this tutorial we will walk first\nthrough a simple implementation then do allocation-free implementations and\nlooking deep into solver options and benchmarking\n\n Part 1 Implementing the BRUSS PDE System as ODEs\n\nThe Brusselator PDE is defined as follows\n\nbeginalign\nfracpartial upartial t = 1 + u^2v - 44u + alpha(fracpartial^2 upartial x^2 + fracpartial^2 upartial y^2) + f(x y t)\nfracpartial vpartial t = 34u - u^2v + alpha(fracpartial^2 upartial x^2 + fracpartial^2 upartial y^2)endalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"where","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"f(x y t) = begincases\n5  quad textif  (x-03)^2+(y-06)^2  01^2 text and  t  11 \n0  quad textelseendcases","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"and the initial conditions are","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\nu(x y 0) = 22cdot y(1-y)^32 \nv(x y 0) = 27cdot x(1-x)^32endalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"with the periodic boundary condition","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\nu(x+1yt) = u(xyt) \nu(xy+1t) = u(xyt)endalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"on a timespan of t in 022.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"To solve this PDE, we will discretize it into a system of ODEs with the finite difference method. We discretize u and v into arrays of the values at each time point: u[i,j] = u(i*dx,j*dy) for some choice of dx/dy, and same for v. Then our ODE is defined with U[i,j,k] = [u v]. The second derivative operator, the Laplacian, discretizes to become a tridiagonal matrix with [1 -2 1] and a 1 in the top right and bottom left corners. The nonlinear functions are then applied at each point in space (they are broadcast). Use dx=dy=1/32.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"You will know when you have the correct solution when you plot the solution at x=y=0 and see a periodic orbit, e.g., ts=0:0.05:22; plot(ts, sol1.(ts, idxs=1)).","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"If you are not familiar with this process, see the Gierer-Meinhardt example from the SciMLTutorials.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Note: Start by doing the simplest implementation!","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-2:-Optimizing-the-BRUSS-Code","page":"SciML Workshop Exercises","title":"Part 2: Optimizing the BRUSS Code","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"PDEs are expensive to solve, and so we will go nowhere without some code optimizing! Follow the steps described in the the Gierer-Meinhardt example from the SciMLTutorials to optimize your Brusselator code. Try other formulations and see what ends up the fastest! Find a trade-off between performance and simplicity that suits your needs.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-3:-Exploiting-Jacobian-Sparsity-with-Color-Differentiation","page":"SciML Workshop Exercises","title":"Part 3: Exploiting Jacobian Sparsity with Color Differentiation","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the sparsity! function from SparseDiffTools to generate the sparsity pattern for the Jacobian of this problem. Follow the documentations on the DiffEqFunction page to specify the sparsity pattern of the Jacobian. Generate an add the color vector to speed up the computation of the Jacobian.","category":"page"},{"location":"exercises/01-workshop_exercises/#(Optional)-Part-4:-Structured-Jacobians","page":"SciML Workshop Exercises","title":"(Optional) Part 4: Structured Jacobians","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Specify the sparsity pattern using a BlockBandedMatrix from BlockBandedMatrices.jl to accelerate the previous sparsity handling tricks.","category":"page"},{"location":"exercises/01-workshop_exercises/#(Optional)-Part-5:-Automatic-Symbolicification-and-Analytical-Jacobian","page":"SciML Workshop Exercises","title":"(Optional) Part 5: Automatic Symbolicification and Analytical Jacobian","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the modelingtoolkitize function from ModelingToolkit.jl to convert your numerical ODE function into a symbolic ODE function and use that to compute and solve with an analytical sparse Jacobian.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-6:-Utilizing-Preconditioned-GMRES-Linear-Solvers","page":"SciML Workshop Exercises","title":"Part 6: Utilizing Preconditioned-GMRES Linear Solvers","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the linear solver specification page to solve the equation with TRBDF2 with GMRES. Use the Sundials documentation to solve the equation with CVODE_BDF with Sundials' special internal GMRES. To both of these, use the AlgebraicMultigrid.jl to add a preconditioner to the GMRES solver.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-7:-Exploring-IMEX-and-Exponential-Integrator-Techniques-(E)","page":"SciML Workshop Exercises","title":"Part 7: Exploring IMEX and Exponential Integrator Techniques (E)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Instead of using the standard ODEProblem, define a SplitODEProblem to move some of the equation to the \"non-stiff part\". Try different splits and solve with KenCarp4 to see if the solution can be accelerated.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Next, use MatrixFreeOperator and DiffEqArrayOperator to define part of the equation as linear, and use the ETDRK4 exponential integrator to solve the equation. Note that this technique is not appropriate for this equation since it relies on the nonlinear term being non-stiff for best results.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-8:-Work-Precision-Diagrams-for-Benchmarking-Solver-Choices","page":"SciML Workshop Exercises","title":"Part 8: Work-Precision Diagrams for Benchmarking Solver Choices","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the WorkPrecisionSet method from DiffEqDevTools.jl to benchmark multiple different solver methods and find out what combination is most efficient. Take a look at DiffEqBenchmarks.jl for usage examples.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-9:-GPU-Parallelism-for-PDEs-(E)","page":"SciML Workshop Exercises","title":"Part 9: GPU-Parallelism for PDEs (E)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Fully vectorize your implementation of the ODE and use a CuArray from CuArrays.jl as the initial condition to cause the whole solution to be GPU accelerated.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-10:-Adjoint-Sensitivity-Analysis-for-Gradients-of-PDEs","page":"SciML Workshop Exercises","title":"Part 10: Adjoint Sensitivity Analysis for Gradients of PDEs","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In order to optimize the parameters of a PDE, you need to be able to compute the gradient of the solution with respect to the parameters. This is done through sensitivity analysis. For PDEs, generally the system is at a scale where forward sensitivity analysis (forward-mode automatic differentiation) is no longer suitable, and for these cases one uses adjoint sensitivity analysis.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Rewrite the PDE so the constant terms are parameters, and use the adjoint sensitivity analysis documentation to solve for the solution gradient with a cost function being the L2 distance of the solution from the value 1. Solve with interpolated and checkpointed adjoints. Play with using reverse-mode automatic differentiation vs direct computation of vector-Jacobian products using the autojacvec option of the SensitivityAlg. Find the set of options most suitable for this PDE.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"If you have compute time, use this adjoint to optimize the parameters of the PDE with respect to this cost function.","category":"page"},{"location":"exercises/01-workshop_exercises/#Problem-5:-Global-Parameter-Sensitivity-and-Optimality-with-GPU-and-Distributed-Ensembles-(B)","page":"SciML Workshop Exercises","title":"Problem 5: Global Parameter Sensitivity and Optimality with GPU and Distributed Ensembles (B)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In this example we will investigate how the parameters \"generally\" effect the solution in the chaotic Henon-Heiles system. By \"generally\" we will use global sensitivity analysis methods to get an average global characterization of the parameters on the solution. In addition to a global sensitivity approach, we will generate large ensembles of solutions with different parameters using a GPU-based parallelism approach.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-1:-Implementing-the-Henon-Heiles-System-(B)","page":"SciML Workshop Exercises","title":"Part 1: Implementing the Henon-Heiles System (B)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"The Henon-Heiles Hamiltonian system is described by the ODEs:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\nfracdp_1dt = -q_1 (1 + 2q_2)\nfracdp_2dt = -q_2 - (q_1^2 - q_2^2)\nfracdq_1dt = p_1\nfracdq_2dt = p_2endalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"with initial conditions u_0 = 01000005. Solve this system over the timespan tin01000","category":"page"},{"location":"exercises/01-workshop_exercises/#(Optional)-Part-2:-Alternative-Dynamical-Implmentations-of-Henon-Heiles-(B)","page":"SciML Workshop Exercises","title":"(Optional) Part 2: Alternative Dynamical Implmentations of Henon-Heiles (B)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"The Henon-Heiles defines a Hamiltonian system with certain structures which can be utilized for a more efficient solution. Use the Dynamical problems page to define a SecondOrderODEProblem corresponding to the acceleration terms:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"beginalign\nfracd^2q_1dt^2 = -q_1 (1 + 2q_2)\nfracd^2q_2dt^2 = -q_2 - (q_1^2 - q_2^2)endalign","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Solve this with a method that is specific to dynamical problems, like DPRKN6.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"The Hamiltonian can also be directly described:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"H(pq) = frac12(p_1^2 + p_2^2) + frac12(q_1^2+q_2^2+2q_1^2 q_2 - frac23q_2^3)","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Solve this problem using the HamiltonianProblem constructor from DiffEqPhysics.jl.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-3:-Parallelized-Ensemble-Solving","page":"SciML Workshop Exercises","title":"Part 3: Parallelized Ensemble Solving","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"To understand the orbits of the Henon-Heiles system, it can be useful to solve the system with many different initial conditions. Use the ensemble interface to solve with randomized initial conditions in parallel using threads with EnsembleThreads(). Then, use addprocs() to add more cores and solve using EnsembleDistributed(). The former will solve using all of the cores on a single computer, while the latter will use all of the cores on which there are processors, which can include thousands across a supercomputer! See Julia's parallel computing setup page for more details on the setup.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-4:-Parallelized-GPU-Ensemble-Solving","page":"SciML Workshop Exercises","title":"Part 4: Parallelized GPU Ensemble Solving","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Setup the CUDAnative.jl library and use the EnsembleGPUArray() method to parallelize the solution across the thousands of cores of a GPU. Note that this will efficiency solve for hundreds of thousands of trajectores.","category":"page"},{"location":"exercises/01-workshop_exercises/#Problem-6:-Training-Neural-Stochastic-Differential-Equations-with-GPU-acceleration-(I)","page":"SciML Workshop Exercises","title":"Problem 6: Training Neural Stochastic Differential Equations with GPU acceleration (I)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In the previous models we had to define a model. Now let's shift the burden of model-proofing onto data by utilizing neural differential equations. A neural differential equation is a differential equation where the model equations are replaced, either in full or in part, by a neural network. For example, a neural ordinary differential equation is an equation u^prime = f(upt) where f is a neural network. We can learn this neural network from data using various methods, the easiest of which is known as the single shooting method, where one chooses neural network parameters, solves the equation, and checks the ODE's solution against data as a loss.","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"In this example we will define and train various forms of neural differential equations. Note that all of the differential equation types are compatible with neural differential equations, so this is only going to scratch the surface of the possibilites!","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-1:-Constructing-and-Training-a-Basic-Neural-ODE","page":"SciML Workshop Exercises","title":"Part 1: Constructing and Training a Basic Neural ODE","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the DiffEqFlux.jl README to construct a neural ODE to train against the training data:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"\nu0 = Float32[2.; 0.]\ndatasize = 30\ntspan = (0.0f0,1.5f0)\n\nfunction trueODEfunc(du,u,p,t)\n    true_A = [-0.1 2.0; -2.0 -0.1]\n    du .= ((u.^3)'true_A)'\nend\nt = range(tspan[1],tspan[2],length=datasize)\nprob = ODEProblem(trueODEfunc,u0,tspan)\node_data = Array(solve(prob,Tsit5(),saveat=t))","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-2:-GPU-accelerating-the-Neural-ODE-Process","page":"SciML Workshop Exercises","title":"Part 2: GPU-accelerating the Neural ODE Process","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use the gpu function from Flux.jl to transform all of the calculations onto the GPU and train the neural ODE using GPU-accelerated Tsit5 with adjoints.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-3:-Defining-and-Training-a-Mixed-Neural-ODE","page":"SciML Workshop Exercises","title":"Part 3: Defining and Training a Mixed Neural ODE","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Gather data from the Lotka-Volterra equation:","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"\nfunction lotka_volterra(du,u,p,t)\n  x, y = u\n  α, β, δ, γ = p\n  du[1] = dx = α*x - β*x*y\n  du[2] = dy = -δ*y + γ*x*y\nend\nu0 = [1.0,1.0]\ntspan = (0.0,10.0)\np = [1.5,1.0,3.0,1.0]\nprob = ODEProblem(lotka_volterra,u0,tspan,p)\nsol = Array(solve(prob,Tsit5())(0.0:1.0:10.0))","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Now use the mixed neural section of the documentation to define the mixed neural ODE where the functional form of fracdxdt is known, and try to derive a neural formulation for fracdydt directly from the data.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-4:-Constructing-a-Basic-Neural-SDE","page":"SciML Workshop Exercises","title":"Part 4: Constructing a Basic Neural SDE","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Generate data from the Lotka-Volterra equation with multiplicative noise","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"\nfunction lotka_volterra(du,u,p,t)\n  x, y = u\n  α, β, δ, γ = p\n  du[1] = dx = α*x - β*x*y\n  du[2] = dy = -δ*y + γ*x*y\nend\nfunction lv_noise(du,u,p,t)\n  du[1] = p[5]*u[1]\n  du[2] = p[6]*u[2]\nend\nu0 = [1.0,1.0]\ntspan = (0.0,10.0)\np = [1.5,1.0,3.0,1.0,0.1,0.1]\nprob = SDEProblem(lotka_volterra,lv_noise,u0,tspan,p)\nsol = [Array(solve(prob,SOSRI())(0.0:1.0:10.0)) for i in 1:20] # 20 solution samples","category":"page"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Train a neural stochastic differential equation dX = f(X)dt + g(X)dW_t where both the drift (f) and the diffusion (g) functions are neural networks. See if constraining g can make the problem easier to fit.","category":"page"},{"location":"exercises/01-workshop_exercises/#Part-5:-Optimizing-the-training-behavior-with-minibatching-(E)","page":"SciML Workshop Exercises","title":"Part 5: Optimizing the training behavior with minibatching (E)","text":"","category":"section"},{"location":"exercises/01-workshop_exercises/","page":"SciML Workshop Exercises","title":"SciML Workshop Exercises","text":"Use minibatching on the data to improve the training procedure. An example can be found at this PR.","category":"page"},{"location":"test/","page":"-","title":"-","text":"","category":"page"},{"location":"test/","page":"-","title":"-","text":"author: \"Chris Rackauckas\" title: \"Test\" –-","category":"page"},{"location":"test/","page":"-","title":"-","text":"This is a test of the builder system.","category":"page"},{"location":"test/#Appendix","page":"-","title":"Appendix","text":"","category":"section"},{"location":"test/","page":"-","title":"-","text":"This tutorial is part of the SciMLTutorials.jl repository, found at: https://github.com/SciML/SciMLTutorials.jl.  For more information on doing scientific machine learning (SciML) with open source software, check out https://sciml.ai/.","category":"page"},{"location":"test/","page":"-","title":"-","text":"To locally run this tutorial, do the following commands:","category":"page"},{"location":"test/","page":"-","title":"-","text":"using SciMLTutorials\nSciMLTutorials.weave_file(\".\",\"Testing/test.jmd\")","category":"page"},{"location":"test/","page":"-","title":"-","text":"Computer Information:","category":"page"},{"location":"test/","page":"-","title":"-","text":"Julia Version 1.6.1\nCommit 6aaedecc44 (2021-04-23 05:59 UTC)\nPlatform Info:\n  OS: macOS (x86_64-apple-darwin18.7.0)\n  CPU: Intel(R) Core(TM) i5-5350U CPU @ 1.80GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-11.0.1 (ORCJIT, broadwell)\nEnvironment:\n  JULIA_LOAD_PATH = @:/var/folders/lv/kg1z6t3s4wdf1sss2p42dr200000gn/T/jl_NMW2d4\n","category":"page"},{"location":"test/","page":"-","title":"-","text":"      Status `~/.julia/dev/SciMLTutorials/tutorials/Testing/Project.toml`\n  [30cb0354] SciMLTutorials v0.8.0","category":"page"},{"location":"test/","page":"-","title":"-","text":"And the full manifest:","category":"page"},{"location":"test/","page":"-","title":"-","text":"      Status `~/.julia/dev/SciMLTutorials/tutorials/Testing/Manifest.toml`\n  [621f4979] AbstractFFTs v1.0.1\n  [79e6a3ab] Adapt v3.3.0\n  [d360d2e6] ChainRulesCore v0.9.44\n  [35d6a980] ColorSchemes v3.12.1\n  [3da002f7] ColorTypes v0.11.0\n  [5ae59095] Colors v0.12.8\n  [34da2185] Compat v3.30.0\n  [8f4d0f93] Conda v1.5.2\n  [d38c429a] Contour v0.5.7\n  [717857b8] DSP v0.6.10\n  [9a962f9c] DataAPI v1.6.0\n  [864edb3b] DataStructures v0.18.9\n  [e2d170a0] DataValueInterfaces v1.0.0\n  [ffbed154] DocStringExtensions v0.8.4\n  [e2ba6199] ExprTools v0.1.3\n  [8f5d6c58] EzXML v1.1.0\n  [c87230d0] FFMPEG v0.4.0\n  [7a1cc6ca] FFTW v1.4.1\n  [53c48c17] FixedPointNumbers v0.8.4\n  [59287772] Formatting v0.4.2\n  [28b8d3ca] GR v0.57.4\n  [5c1252a2] GeometryBasics v0.3.12\n  [42e2da0e] Grisu v1.0.2\n  [cd3eb016] HTTP v0.9.8\n  [eafb193a] Highlights v0.4.5\n  [7073ff75] IJulia v1.23.2\n  [83e8ac13] IniFile v0.5.0\n  [d8418881] Intervals v1.5.0\n  [c8e1da08] IterTools v1.3.0\n  [82899510] IteratorInterfaceExtensions v1.0.0\n  [692b3bcd] JLLWrappers v1.3.0\n  [682c06a0] JSON v0.21.1\n  [b964fa9f] LaTeXStrings v1.2.1\n  [23fbe1c1] Latexify v0.15.5\n  [2ab3a3ac] LogExpFunctions v0.2.4\n  [1914dd2f] MacroTools v0.5.6\n  [739be429] MbedTLS v1.0.3\n  [442fdcdd] Measures v0.3.1\n  [e1d29d7a] Missings v1.0.0\n  [78c3b35d] Mocking v0.7.1\n  [ffc61752] Mustache v1.0.10\n  [77ba4419] NaNMath v0.3.5\n  [6fe1bfb0] OffsetArrays v1.8.0\n  [bac558e1] OrderedCollections v1.4.1\n  [69de0a69] Parsers v1.1.0\n  [ccf2f8ad] PlotThemes v2.0.1\n  [995b91a9] PlotUtils v1.0.10\n  [91a5bcdd] Plots v1.15.2\n  [f27b6e38] Polynomials v1.2.1\n  [21216c6a] Preferences v1.2.2\n  [3cdcf5f2] RecipesBase v1.1.1\n  [01d81517] RecipesPipeline v0.3.2\n  [189a3867] Reexport v1.0.0\n  [ae029012] Requires v1.1.3\n  [30cb0354] SciMLTutorials v0.8.0\n  [6c6a2e73] Scratch v1.0.3\n  [992d4aef] Showoff v1.0.3\n  [b85f4697] SoftGlobalScope v1.1.0\n  [a2af1166] SortingAlgorithms v1.0.0\n  [276daf66] SpecialFunctions v1.4.1\n  [90137ffa] StaticArrays v1.2.0\n  [82ae8749] StatsAPI v1.0.0\n  [2913bbd2] StatsBase v0.33.8\n  [09ab397b] StructArrays v0.5.1\n  [3783bdb8] TableTraits v1.0.1\n  [bd369af6] Tables v1.4.2\n  [f269a46b] TimeZones v1.5.5\n  [5c2747f8] URIs v1.3.0\n  [81def892] VersionParsing v1.2.0\n  [44d3d7a6] Weave v0.10.8\n  [ddb6d928] YAML v0.4.6\n  [c2297ded] ZMQ v1.2.1\n  [6e34b625] Bzip2_jll v1.0.6+5\n  [83423d85] Cairo_jll v1.16.0+6\n  [5ae413db] EarCut_jll v2.1.5+1\n  [2e619515] Expat_jll v2.2.10+0\n  [b22a6f82] FFMPEG_jll v4.3.1+4\n  [f5851436] FFTW_jll v3.3.9+7\n  [a3f928ae] Fontconfig_jll v2.13.1+14\n  [d7e528f0] FreeType2_jll v2.10.1+5\n  [559328eb] FriBidi_jll v1.0.5+6\n  [0656b61e] GLFW_jll v3.3.4+0\n  [d2c73de3] GR_jll v0.57.2+0\n  [78b55507] Gettext_jll v0.21.0+0\n  [7746bdde] Glib_jll v2.68.1+0\n  [1d5cc7b8] IntelOpenMP_jll v2018.0.3+2\n  [aacddb02] JpegTurbo_jll v2.0.1+3\n  [c1c5ebd0] LAME_jll v3.100.0+3\n  [dd4b983a] LZO_jll v2.10.0+3\n  [dd192d2f] LibVPX_jll v1.9.0+1\n  [e9f186c6] Libffi_jll v3.2.2+0\n  [d4300ac3] Libgcrypt_jll v1.8.5+4\n  [7e76a0d4] Libglvnd_jll v1.3.0+3\n  [7add5ba3] Libgpg_error_jll v1.36.0+3\n  [94ce4f54] Libiconv_jll v1.16.1+0\n  [4b2f31a3] Libmount_jll v2.35.0+0\n  [89763e89] Libtiff_jll v4.1.0+2\n  [38a345b3] Libuuid_jll v2.36.0+0\n  [856f044c] MKL_jll v2021.1.1+1\n  [e7412a2a] Ogg_jll v1.3.4+2\n  [458c3c95] OpenSSL_jll v1.1.1+6\n  [efe28fd5] OpenSpecFun_jll v0.5.4+0\n  [91d4177d] Opus_jll v1.3.1+3\n  [2f80f16e] PCRE_jll v8.44.0+0\n  [30392449] Pixman_jll v0.40.0+0\n  [ea2cea3b] Qt5Base_jll v5.15.2+0\n  [a2964d1f] Wayland_jll v1.17.0+4\n  [2381bf8a] Wayland_protocols_jll v1.18.0+4\n  [02c8fc9c] XML2_jll v2.9.12+0\n  [aed1982a] XSLT_jll v1.1.33+4\n  [4f6342f7] Xorg_libX11_jll v1.6.9+4\n  [0c0b7dd1] Xorg_libXau_jll v1.0.9+4\n  [935fb764] Xorg_libXcursor_jll v1.2.0+4\n  [a3789734] Xorg_libXdmcp_jll v1.1.3+4\n  [1082639a] Xorg_libXext_jll v1.3.4+4\n  [d091e8ba] Xorg_libXfixes_jll v5.0.3+4\n  [a51aa0fd] Xorg_libXi_jll v1.7.10+4\n  [d1454406] Xorg_libXinerama_jll v1.1.4+4\n  [ec84b674] Xorg_libXrandr_jll v1.5.2+4\n  [ea2f1a96] Xorg_libXrender_jll v0.9.10+4\n  [14d82f49] Xorg_libpthread_stubs_jll v0.1.0+3\n  [c7cfdc94] Xorg_libxcb_jll v1.13.0+3\n  [cc61e674] Xorg_libxkbfile_jll v1.1.0+4\n  [12413925] Xorg_xcb_util_image_jll v0.4.0+1\n  [2def613f] Xorg_xcb_util_jll v0.4.0+1\n  [975044d2] Xorg_xcb_util_keysyms_jll v0.4.0+1\n  [0d47668e] Xorg_xcb_util_renderutil_jll v0.3.9+1\n  [c22f9ab0] Xorg_xcb_util_wm_jll v0.4.1+1\n  [35661453] Xorg_xkbcomp_jll v1.4.2+4\n  [33bec58e] Xorg_xkeyboard_config_jll v2.27.0+4\n  [c5fb5394] Xorg_xtrans_jll v1.4.0+3\n  [8f1865be] ZeroMQ_jll v4.3.2+6\n  [3161d3a3] Zstd_jll v1.5.0+0\n  [0ac62f75] libass_jll v0.14.0+4\n  [f638f0a6] libfdk_aac_jll v0.1.6+4\n  [b53b4c65] libpng_jll v1.6.37+6\n  [a9144af2] libsodium_jll v1.0.20+0\n  [f27f6e37] libvorbis_jll v1.3.6+6\n  [1270edf5] x264_jll v2020.7.14+2\n  [dfaa095f] x265_jll v3.0.0+3\n  [d8fb68d0] xkbcommon_jll v0.9.1+5\n  [0dad84c5] ArgTools\n  [56f22d72] Artifacts\n  [2a0f44e3] Base64\n  [ade2ca70] Dates\n  [8bb1440f] DelimitedFiles\n  [8ba89e20] Distributed\n  [f43a241f] Downloads\n  [7b1f6079] FileWatching\n  [b77e0a4c] InteractiveUtils\n  [4af54fe1] LazyArtifacts\n  [b27032c2] LibCURL\n  [76f85450] LibGit2\n  [8f399da3] Libdl\n  [37e2e46d] LinearAlgebra\n  [56ddb016] Logging\n  [d6f4376e] Markdown\n  [a63ad114] Mmap\n  [ca575930] NetworkOptions\n  [44cfe95a] Pkg\n  [de0858da] Printf\n  [3fa0cd96] REPL\n  [9a3f8284] Random\n  [ea8e919c] SHA\n  [9e88b42a] Serialization\n  [1a1011a3] SharedArrays\n  [6462fe0b] Sockets\n  [2f01184e] SparseArrays\n  [10745b16] Statistics\n  [fa267f1f] TOML\n  [a4e569a6] Tar\n  [8dfed614] Test\n  [cf7118a7] UUIDs\n  [4ec0a83e] Unicode\n  [e66e0078] CompilerSupportLibraries_jll\n  [deac9b47] LibCURL_jll\n  [29816b5a] LibSSH2_jll\n  [c8ffd9c3] MbedTLS_jll\n  [14a3606d] MozillaCACerts_jll\n  [83775a58] Zlib_jll\n  [8e850ede] nghttp2_jll\n  [3f19e933] p7zip_jll","category":"page"},{"location":"exercises/02-workshop_solutions/#SciML-Workshop-Exercise-Solutions","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using DifferentialEquations\nusing Sundials\nusing BenchmarkTools\nusing Plots","category":"page"},{"location":"exercises/02-workshop_solutions/#Problem-1:-Investigating-Sources-of-Randomness-and-Uncertainty-in-a-Biological-System","page":"SciML Workshop Exercise Solutions","title":"Problem 1: Investigating Sources of Randomness and Uncertainty in a Biological System","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-1:-Simulating-the-Oregonator-ODE-model","page":"SciML Workshop Exercise Solutions","title":"Part 1: Simulating the Oregonator ODE model","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using DifferentialEquations, Plots\nfunction orego(du,u,p,t)\n  s,q,w = p\n  y1,y2,y3 = u\n  du[1] = s*(y2+y1*(1-q*y1-y2))\n  du[2] = (y3-(1+y1)*y2)/s\n  du[3] = w*(y1-y3)\nend\np = [77.27,8.375e-6,0.161]\nprob = ODEProblem(orego,[1.0,2.0,3.0],(0.0,360.0),p)\nsol = solve(prob)\nplot(sol)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"plot(sol,vars=(1,2,3))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-2:-Investigating-Stiffness","page":"SciML Workshop Exercise Solutions","title":"Part 2: Investigating Stiffness","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using BenchmarkTools\nprob = ODEProblem(orego,[1.0,2.0,3.0],(0.0,50.0),p)\n@btime sol = solve(prob,Tsit5())","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"893.348 ms (8723143 allocations: 920.67 MiB)\nretcode: Success\nInterpolation: specialized 4th order \"free\" interpolation\nt: 872306-element Array{Float64,1}:\n  0.0\n  0.01618926718934831\n  0.02355386004837834\n  0.03818038870154586\n  0.050503515877727514\n  0.06810672932191658\n  0.08676359998206734\n  0.11145368602241688\n  0.14105967462147356\n  0.18104879156165962\n  ⋮\n 49.99977330536325\n 49.99980456142745\n 49.999835817515255\n 49.999867073624586\n 49.999898329755446\n 49.99992958590576\n 49.99996084207554\n 49.999992098266844\n 50.0\nu: 872306-element Array{Array{Float64,1},1}:\n [1.0, 2.0, 3.0]\n [1.7128564042197614, 1.9996098373795999, 2.9959141611121862]\n [1.8376268914687968, 1.9993653073090198, 2.994474646468457]\n [1.9480445809808178, 1.9988333244430836, 2.991907642632475]\n [1.9807789479174538, 1.998364632682339, 2.989876120098015]\n [1.996520358969301, 1.9976843022063284, 2.9870473687154533]\n [2.0012471416469095, 1.9969587120867922, 2.9840850652644586]\n [2.003267094253373, 1.9959962346456372, 2.980190667568818]\n [2.0046071951018165, 1.9948405279663373, 2.9755485736940304]\n [2.0062040975915965, 1.9932773146432707, 2.969322732597494]\n ⋮\n [1.00114451241949, 1453.0173573419604, 414.83224206133156]\n [1.0011445128905938, 1453.0163492345089, 414.8301595725294]\n [1.001144513536549, 1453.0153411262695, 414.82807709263454]\n [1.001144514166616, 1453.014333017309, 414.82599462178484]\n [1.0011445147807905, 1453.013324907627, 414.8239121599803]\n [1.0011445151883325, 1453.0123167972909, 414.82182970735875]\n [1.0011445153892404, 1453.0113086863003, 414.8197472639202]\n [1.001144515574252, 1453.0103005745884, 414.8176648295267]\n [1.0008765717435082, 1453.0100456736175, 414.8171383809634]","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"@btime sol = solve(prob,Rodas5())","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"534.668 μs (1907 allocations: 130.11 KiB)\nretcode: Success\nInterpolation: 3rd order Hermite\nt: 110-element Array{Float64,1}:\n  0.0\n  0.019615259849088615\n  0.029598314714131158\n  0.04705295553350644\n  0.06489958093933189\n  0.08933251171067431\n  0.12069400166576917\n  0.16655311655246774\n  0.24089140897016648\n  0.39558909491704786\n  ⋮\n 26.756905610888992\n 27.982111658219903\n 29.768997154114096\n 32.21837697976615\n 35.093850201346655\n 38.49798110093118\n 42.33811919585127\n 46.60842194880463\n 50.0\nu: 110-element Array{Array{Float64,1},1}:\n [1.0, 2.0, 3.0]\n [1.7804115041903392, 1.9994992840408727, 2.995224421497252]\n [1.898773632635922, 1.9991507098568697, 2.9933805881501456]\n [1.9745775749460168, 1.9984968888022705, 2.9904382700551317]\n [1.9949959346655894, 1.9978087397951183, 2.9875591897227847]\n [2.0015958931121642, 1.9968586608477479, 2.98367866834122]\n [2.003748190575679, 1.9956356930368464, 2.9787387129953866]\n [2.0056429388535917, 1.9938442509772465, 2.9715736894920433]\n [2.0085949421229565, 1.9909335157971781, 2.960099467726684]\n [2.014815188384092, 1.9848502001186519, 2.936770263171178]\n ⋮\n [1.0009510454262696, 1052.1681949981978, 17454.97704553619]\n [1.000790082105047, 1266.4223517298105, 14330.342720311946]\n [1.0006713873660182, 1490.2781714142227, 10747.93771088393]\n [1.000598803847115, 1670.9447027478102, 7245.705166049239]\n [1.000568993307521, 1758.4723173221284, 4560.988616721742]\n [1.000569273504183, 1757.6100577789323, 2636.982996349979]\n [1.000594225030407, 1683.8471494545056, 1421.4818618119598]\n [1.0006409946157637, 1561.0560213127278, 715.2527024515273]\n [1.0006887475677544, 1452.8969192375328, 414.7220773988324]","category":"page"},{"location":"exercises/02-workshop_solutions/#(Optional)-Part-3:-Specifying-Analytical-Jacobians-(I)","page":"SciML Workshop Exercise Solutions","title":"(Optional) Part 3: Specifying Analytical Jacobians (I)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#(Optional)-Part-4:-Automatic-Symbolicification-and-Analytical-Jacobian-Calculations","page":"SciML Workshop Exercise Solutions","title":"(Optional) Part 4: Automatic Symbolicification and Analytical Jacobian Calculations","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-5:-Adding-stochasticity-with-stochastic-differential-equations","page":"SciML Workshop Exercise Solutions","title":"Part 5: Adding stochasticity with stochastic differential equations","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function orego(du,u,p,t)\n  s,q,w = p\n  y1,y2,y3 = u\n  du[1] = s*(y2+y1*(1-q*y1-y2))\n  du[2] = (y3-(1+y1)*y2)/s\n  du[3] = w*(y1-y3)\nend\nfunction g(du,u,p,t)\n  du[1] = 0.1u[1]\n  du[2] = 0.1u[2]\n  du[3] = 0.1u[3]\nend\np = [77.27,8.375e-6,0.161]\nprob = SDEProblem(orego,g,[1.0,2.0,3.0],(0.0,30.0),p)\nsol = solve(prob,SOSRI())\nplot(sol)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"sol = solve(prob,ImplicitRKMil()); plot(sol)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Error: InexactError: Int64(Inf)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"sol = solve(prob,ImplicitRKMil()); plot(sol)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Error: InexactError: Int64(Inf)","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-6:-Gillespie-jump-models-of-discrete-stochasticity","page":"SciML Workshop Exercise Solutions","title":"Part 6: Gillespie jump models of discrete stochasticity","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-7:-Probabilistic-Programming-/-Bayesian-Parameter-Estimation-with-DiffEqBayes.jl-Turing.jl-(I)","page":"SciML Workshop Exercise Solutions","title":"Part 7: Probabilistic Programming / Bayesian Parameter Estimation with DiffEqBayes.jl + Turing.jl (I)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"The data was generated with:","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function orego(du,u,p,t)\n  s,q,w = p\n  y1,y2,y3 = u\n  du[1] = s*(y2+y1*(1-q*y1-y2))\n  du[2] = (y3-(1+y1)*y2)/s\n  du[3] = w*(y1-y3)\nend\np = [60.0,1e-5,0.2]\nprob = ODEProblem(orego,[1.0,2.0,3.0],(0.0,30.0),p)\nsol = solve(prob,Rodas5(),abstol=1/10^14,reltol=1/10^14)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"retcode: Success\nInterpolation: 3rd order Hermite\nt: 48825-element Array{Float64,1}:\n  0.0\n  0.0001377354452002734\n  0.0002010718419122773\n  0.0003021998626318717\n  0.0004033278833514661\n  0.0005062369821758017\n  0.0006097468311490204\n  0.0007142127440433809\n  0.0008192699078400218\n  0.0009249477742217067\n  ⋮\n 29.8029621721172\n 29.830644478725933\n 29.858326785334665\n 29.886009659186307\n 29.91369253303795\n 29.94137540688959\n 29.96906121150096\n 29.99674701611233\n 30.0\nu: 48825-element Array{Array{Float64,1},1}:\n [1.0, 2.0, 3.0]\n [1.0082299897608653, 1.9999976854327, 2.9999450200919755]\n [1.0119917072902584, 1.999996608412124, 2.999919814481464]\n [1.0179684138472678, 1.9999948722835914, 2.99987966834307]\n [1.0239089650942212, 1.9999931160074038, 2.9998396435319274]\n [1.029917251895588, 1.9999913082422207, 2.999799037595289]\n [1.0359233048539687, 1.999989469133448, 2.9997583198166615]\n [1.0419471308701034, 1.9999875920280812, 2.9997173524755154]\n [1.0479670917315083, 1.9999856831456868, 2.9996762806603012]\n [1.0539844577981918, 1.9999837417184405, 2.99963509426064]\n ⋮\n [1.000649179056226, 1541.3915652677524, 2704.0497424834743]\n [1.0006492543168537, 1541.2130026445143, 2689.1257668560265]\n [1.0006493324193109, 1541.027741407077, 2674.2841889364954]\n [1.0006494133487425, 1540.8358216266624, 2659.5242521879404]\n [1.0006494970871955, 1540.6372908555195, 2644.845809127133]\n [1.0006495836184481, 1540.4321926696598, 2630.248409804933]\n [1.0006496729360377, 1540.220547649861, 2615.7300741273025]\n [1.0006497650150368, 1540.0024202595741, 2601.291906654189]\n [1.00064977601455, 1539.9763674790563, 2599.600715743143]","category":"page"},{"location":"exercises/02-workshop_solutions/#(Optional)-Part-8:-Using-DiffEqBiological's-Reaction-Network-DSL","page":"SciML Workshop Exercise Solutions","title":"(Optional) Part 8: Using DiffEqBiological's Reaction Network DSL","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Problem-2:-Fitting-Hybrid-Delay-Pharmacokinetic-Models-with-Automated-Responses-(B)","page":"SciML Workshop Exercise Solutions","title":"Problem 2: Fitting Hybrid Delay Pharmacokinetic Models with Automated Responses (B)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-1:-Defining-an-ODE-with-Predetermined-Doses","page":"SciML Workshop Exercise Solutions","title":"Part 1: Defining an ODE with Predetermined Doses","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function onecompartment(du,u,p,t)\n  Ka,Ke = p\n  du[1] = -Ka*u[1]\n  du[2] =  Ka*u[1] - Ke*u[2]\nend\np = (Ka=2.268,Ke=0.07398)\nprob = ODEProblem(onecompartment,[100.0,0.0],(0.0,90.0),p)\n\ntstops = [24,48,72]\ncondition(u,t,integrator) = t ∈ tstops\naffect!(integrator) = (integrator.u[1] += 100)\ncb = DiscreteCallback(condition,affect!)\nsol = solve(prob,Tsit5(),callback=cb,tstops=tstops)\nplot(sol)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-2:-Adding-Delays","page":"SciML Workshop Exercise Solutions","title":"Part 2: Adding Delays","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function onecompartment_delay(du,u,h,p,t)\n  Ka,Ke,τ = p\n  delayed_depot = h(p,t-τ)[1]\n  du[1] = -Ka*u[1]\n  du[2] =  Ka*delayed_depot - Ke*u[2]\nend\np = (Ka=2.268,Ke=0.07398,τ=6.0)\nh(p,t) = [0.0,0.0]\nprob = DDEProblem(onecompartment_delay,[100.0,0.0],h,(0.0,90.0),p)\n\ntstops = [24,48,72]\ncondition(u,t,integrator) = t ∈ tstops\naffect!(integrator) = (integrator.u[1] += 100)\ncb = DiscreteCallback(condition,affect!)\nsol = solve(prob,MethodOfSteps(Rosenbrock23()),callback=cb,tstops=tstops)\nplot(sol)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-3:-Automatic-Differentiation-(AD)-for-Optimization-(I)","page":"SciML Workshop Exercise Solutions","title":"Part 3: Automatic Differentiation (AD) for Optimization (I)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-4:-Fitting-Known-Quantities-with-DiffEqParamEstim.jl-Optim.jl","page":"SciML Workshop Exercise Solutions","title":"Part 4: Fitting Known Quantities with DiffEqParamEstim.jl + Optim.jl","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"The data was generated with","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"p = (Ka = 0.5, Ke = 0.1, τ = 4.0)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Ka = 0.5, Ke = 0.1, τ = 4.0)","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-5:-Implementing-Control-Based-Logic-with-ContinuousCallbacks-(I)","page":"SciML Workshop Exercise Solutions","title":"Part 5: Implementing Control-Based Logic with ContinuousCallbacks (I)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-6:-Global-Sensitivity-Analysis-with-the-Morris-and-Sobol-Methods","page":"SciML Workshop Exercise Solutions","title":"Part 6: Global Sensitivity Analysis with the Morris and Sobol Methods","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Problem-3:-Differential-Algebraic-Equation-Modeling-of-a-Double-Pendulum-(B)","page":"SciML Workshop Exercise Solutions","title":"Problem 3: Differential-Algebraic Equation Modeling of a Double Pendulum (B)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-1:-Simple-Introduction-to-DAEs:-Mass-Matrix-Robertson-Equations","page":"SciML Workshop Exercise Solutions","title":"Part 1: Simple Introduction to DAEs: Mass-Matrix Robertson Equations","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function f(du, u, p, t)\n    du[1] = -p[1]*u[1] + p[2]*u[2]*u[3]\n    du[2] = p[1]*u[1] - p[2]*u[2]*u[3] - p[3]*u[2]*u[2]\n    du[3] = u[1] + u[2] + u[3] - 1.\nend\nM = [1 0 0; 0 1 0; 0 0 0.]\np = [0.04, 10^4, 3e7]\nu0 = [1.,0.,0.]\ntspan = (0., 1e6)\nprob = ODEProblem(ODEFunction(f, mass_matrix = M), u0, tspan, p)\nsol = solve(prob, Rodas5())\nplot(sol, xscale=:log10, tspan=(1e-6, 1e5), layout=(3,1))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-2:-Solving-the-Implicit-Robertson-Equations-with-IDA","page":"SciML Workshop Exercise Solutions","title":"Part 2: Solving the Implicit Robertson Equations with IDA","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"# Robertson Equation DAE Implicit form\nfunction h(out, du, u, p, t)\n    out[1] = -p[1]*u[1] + p[2]*u[2]*u[3] - du[1]\n    out[2] = p[1]*u[1] - p[2]*u[2]*u[3] - p[3]*u[2]*u[2] - du[2]\n    out[3] = u[1] + u[2] + u[3] - 1.\nend\np = [0.04, 10^4, 3e7]\ndu0 = [-0.04, 0.04, 0.0]\nu0 = [1.,0.,0.]\ntspan = (0., 1e6)\ndifferential_vars = [true, true, false]\nprob = DAEProblem(h, du0, u0, tspan, p, differential_vars = differential_vars)\nsol = solve(prob, IDA())\nplot(sol, xscale=:log10, tspan=(1e-6, 1e5), layout=(3,1))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-3:-Manual-Index-Reduction-of-the-Single-Pendulum","page":"SciML Workshop Exercise Solutions","title":"Part 3: Manual Index Reduction of the Single Pendulum","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Consider the equation: $ x^2 + y^2 = L $ Differentiating once with respect to time: $ 2x\\dot{x} + 2y\\dot{y} = 0 $ A second time: $ \\begin{align} {\\dot{x}}^2 + x\\ddot{x} + {\\dot{y}}^2 + y\\ddot{y} &= 0  \\\nu^2 + v^2 + x(\\frac{x}{mL}T) + y(\\frac{y}{mL}T - g) &= 0  \\\nu^2 + v^2 + \\frac{x^2 + y^2}{mL}T - yg &= 0 \\\nu^2 + v^2 + \\frac{T}{m} - yg &= 0 \\end{align} $","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Our final set of equations is hence $ \\begin{align}    \\ddot{x} &= \\frac{x}{mL}T \\\n   \\ddot{y} &= \\frac{y}{mL}T - g \\\n   \\dot{x} &= u \\\n   \\dot{y} &= v \\\n   u^2 + v^2 -yg + \\frac{T}{m} &= 0 \\end{align} $","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"We finally obtain T into the third equation. This required two differentiations with respect to time, and so our system of equations went from index 3 to index 1. Now our solver can handle the index 1 system.","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-4:-Single-Pendulum-Solution-with-IDA","page":"SciML Workshop Exercise Solutions","title":"Part 4: Single Pendulum Solution with IDA","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function f(out, da, a, p, t)\n   (L, m, g) = p\n   u, v, x, y, T = a\n   du, dv, dx, dy, dT = da\n   out[1] = x*T/(m*L) - du\n   out[2] = y*T/(m*L) - g - dv\n   out[3] = u - dx\n   out[4] = v - dy\n   out[5] = u^2 + v^2 - y*g + T/m\n   nothing\nend\n\n# Release pendulum from top right\nu0 = zeros(5)\nu0[3] = 1.0\ndu0 = zeros(5)\ndu0[2] = 9.81\n\np = [1,1,9.8]\ntspan = (0.,100.)\n\ndifferential_vars = [true, true, true, true, false]\nprob = DAEProblem(f, du0, u0, tspan, p, differential_vars = differential_vars)\nsol = solve(prob, IDA())\nplot(sol, vars=(3,4))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-5:-Solving-the-Double-Penulum-DAE-System","page":"SciML Workshop Exercise Solutions","title":"Part 5: Solving the Double Penulum DAE System","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"For the double pendulum: The equations for the second ball are the same as the single pendulum case. That is, the equations for the second ball are: $ \\begin{align}    \\ddot{x2} &= \\frac{x2}{m2L2}T2 \\\n   \\ddot{y2} &= \\frac{y2}{m2L2}T2 - g \\\n   \\dot{x2} &= u \\\n   \\dot{y2} &= v \\\n   u2^2 + v2^2 -y2g + \\frac{T2}{m2} &= 0 \\end{align} $ For the first ball, consider x1^2 + y1^2 = L $ $ \\begin{align} x1^2 + x2^2 &= L \\\n2x1\\dot{x1} + 2y1\\dot{y1} &= 0 \\\n\\dot{x1}^2 + \\dot{y1}^2 + x1(\\frac{x1}{m1L1}T1 - \\frac{x2}{m1L2}T2) + y1(\\frac{y1}{m1L1}T1 - g - \\frac{y2}{m1L2}T2) &= 0 \\\nu1^2 + v1^2 + \\frac{T1}{m1} - \\frac{x1x2 + y1y2}{m1L2}T2 &= 0 \\end{align} $","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"So the final equations are: $ \\begin{align}    \\dot{u2} &= x2T2/(m2L2)    \\dot{v2} &= y2*T2/(m2*L2) - g    \\dot{x2} &= u2    \\dot{y2} &= v2    u2^2 + v2^2 -y2*g + \\frac{T2}{m_2} &=  0","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"\\dot{u1} &= x1T1/(m1L1) - x2T2/(m2L2)    \\dot{v1} &= y1*T1/(m1*L1) - g - y2*T2/(m2*L2)    \\dot{x1} &= u1    \\dot{y1} &= v1    u1^2 + v1^2 + \\frac{T1}{m1} +                 \\frac{-x1*x2 - y1*y2}{m1L2}T2 - y1g &= 0 \\end{align} $","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function f(out, da, a, p, t)\n   L1, m1, L2, m2, g = p\n\n   u1, v1, x1, y1, T1,\n   u2, v2, x2, y2, T2 = a\n\n   du1, dv1, dx1, dy1, dT1,\n   du2, dv2, dx2, dy2, dT2 = da\n\n   out[1]  = x2*T2/(m2*L2) - du2\n   out[2]  = y2*T2/(m2*L2) - g - dv2\n   out[3]  = u2 - dx2\n   out[4]  = v2 - dy2\n   out[5]  = u2^2 + v2^2 -y2*g + T2/m2\n\n   out[6]  = x1*T1/(m1*L1) - x2*T2/(m2*L2) - du1\n   out[7]  = y1*T1/(m1*L1) - g - y2*T2/(m2*L2) - dv1\n   out[8]  = u1 - dx1\n   out[9]  = v1 - dy1\n   out[10] = u1^2 + v1^2 + T1/m1 +\n                (-x1*x2 - y1*y2)/(m1*L2)*T2 - y1*g\n   nothing\nend\n\n# Release pendulum from top right\nu0 = zeros(10)\nu0[3] = 1.0\nu0[8] = 1.0\ndu0 = zeros(10)\ndu0[2] = 9.8\ndu0[7] = 9.8\n\np = [1,1,1,1,9.8]\ntspan = (0.,100.)\n\ndifferential_vars = [true, true, true, true, false,\n                     true, true, true, true, false]\nprob = DAEProblem(f, du0, u0, tspan, p, differential_vars = differential_vars)\nsol = solve(prob, IDA())\n\nplot(sol, vars=(3,4))\nplot(sol, vars=(8,9))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Problem-4:-Performance-Optimizing-and-Parallelizing-Semilinear-PDE-Solvers-(I)","page":"SciML Workshop Exercise Solutions","title":"Problem 4: Performance Optimizing and Parallelizing Semilinear PDE Solvers (I)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-1:-Implementing-the-BRUSS-PDE-System-as-ODEs","page":"SciML Workshop Exercise Solutions","title":"Part 1: Implementing the BRUSS PDE System as ODEs","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using DifferentialEquations, Sundials, Plots\n\n# initial condition\nfunction init_brusselator_2d(xyd)\n    N = length(xyd)\n    u = zeros(N, N, 2)\n    for I in CartesianIndices((N, N))\n        x = xyd[I[1]]\n        y = xyd[I[2]]\n        u[I,1] = 22*(y*(1-y))^(3/2)\n        u[I,2] = 27*(x*(1-x))^(3/2)\n    end\n    u\nend\n\nN = 32\n\nxyd_brusselator = range(0,stop=1,length=N)\n\nu0 = vec(init_brusselator_2d(xyd_brusselator))\n\ntspan = (0, 22.)\n\np = (3.4, 1., 10., xyd_brusselator)\n\nbrusselator_f(x, y, t) = ifelse((((x-0.3)^2 + (y-0.6)^2) <= 0.1^2) &&\n                                (t >= 1.1), 5., 0.)\n\n\nusing LinearAlgebra, SparseArrays\ndu = ones(N-1)\nD2 = spdiagm(-1 => du, 0=>fill(-2.0, N), 1 => du)\nD2[1, N] = D2[N, 1] = 1\nD2 = 1/step(xyd_brusselator)^2*D2\ntmp = Matrix{Float64}(undef, N, N)\nfunction brusselator_2d_op(du, u, (D2, tmp, p), t)\n    A, B, α, xyd = p\n    dx = step(xyd)\n    N = length(xyd)\n    α = α/dx^2\n    du = reshape(du, N, N, 2)\n    u = reshape(u, N, N, 2)\n    @views for i in axes(u, 3)\n        ui = u[:, :, i]\n        dui = du[:, :, i]\n        mul!(tmp, D2, ui)\n        mul!(dui, ui, D2')\n        dui .+= tmp\n    end\n\n    @inbounds begin\n        for I in CartesianIndices((N, N))\n            x = xyd[I[1]]\n            y = xyd[I[2]]\n            i = I[1]\n            j = I[2]\n\n            du[i,j,1] = α*du[i,j,1] + B + u[i,j,1]^2*u[i,j,2] - (A + 1)*u[i,j,1] + brusselator_f(x, y, t)\n            du[i,j,2] = α*du[i,j,2] + A*u[i,j,1] - u[i,j,1]^2*u[i,j,2]\n        end\n    end\n    nothing\nend\n\nprob1 = ODEProblem(brusselator_2d_op, u0, tspan, (D2, tmp, p))\n\nsol1 = @time solve(prob1, TRBDF2(autodiff=false));","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"9.267829 seconds (8.02 M allocations: 575.955 MiB, 0.94% gc time)\nretcode: Success\nInterpolation: 3rd order Hermite\nt: 79-element Array{Float64,1}:\n  0.0\n  1.0522804268928948e-10\n  1.1575084695821841e-9\n  1.1680312738511129e-8\n  1.1690835542780058e-7\n  1.169188782320695e-6\n  1.1691993051249639e-5\n  3.96415424995973e-5\n  0.0001251040827040069\n  0.00037992550155953065\n  ⋮\n 18.252302769116575\n 18.556761040654674\n 19.073892463800625\n 19.428284008927427\n 20.09879123998184\n 20.480538570171507\n 20.999444301927937\n 21.403330440737882\n 22.0\nu: 79-element Array{Array{Float64,1},1}:\n [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  2.5250877095783344, \n2.2620667554742258, 1.9735248771761977, 1.665005111992191, 1.34336401668221\n03, 1.0172186542655526, 0.6977464117458191, 0.4003323380813969, 0.148922584\n53196738, 0.0]\n [0.00011790503536898665, 0.00011790503536909906, 0.00011790503536928888, 0\n.00011790503536951345, 0.0001179050353697547, 0.00011790503537000097, 0.000\n11790503537024383, 0.00011790503537047684, 0.00011790503537069474, 0.000117\n90503537089335  …  2.5250585327638797, 2.262041954652914, 1.973505463224665\n6, 1.6649923614746842, 1.3433596406307873, 1.0172251412113864, 0.6977678519\n884, 0.4003770605722655, 0.14902217713448462, 0.000144701505282153]\n [0.0012949971428852717, 0.0012949971428992155, 0.001294997142922781, 0.001\n2949971429507092, 0.0012949971429807212, 0.0012949971430113658, 0.001294997\n1430415896, 0.0012949971430705825, 0.001294997143097699, 0.0012949971431224\n178  …  2.52476680944311, 2.2617940004952306, 1.973311391982252, 1.66486494\n7832933, 1.343316013313132, 1.0172902298879962, 0.6979827036906551, 0.40082\n59597669359, 0.15001758272059923, 0.0015893132679671673]\n [0.012876383252354838, 0.012876383254089876, 0.012876383257051385, 0.01287\n6383260614965, 0.012876383264461243, 0.012876383268395485, 0.01287638327227\n9336, 0.012876383276007026, 0.01287638327949474, 0.012876383282674856  …  2\n.5218540714350746, 2.2593198858887353, 1.971377545998155, 1.663600045556335\n, 1.3428932614037994, 1.0179637350768072, 0.7001796234851249, 0.40546907561\n279366, 0.159920626066569, 0.015802820975871525]\n [0.11431809668801969, 0.11431809701540827, 0.11431809761055266, 0.11431809\n838668756, 0.11431809926467854, 0.1143181001852524, 0.11431810110619822, 0.\n1143181019968641, 0.1143181028341037, 0.11431810359985839  …  2.49319122864\n72744, 2.2351481567086453, 1.9527784378871984, 1.6519892724152478, 1.340282\n573226162, 1.0275217594291501, 0.7274071832384641, 0.4600255371073474, 0.25\n403236055497325, 0.14029945313886596]\n [0.6824546276302552, 0.6824546576303283, 0.6824547160548516, 0.68245479982\n66596, 0.6824549045779489, 0.6824550250157978, 0.6824551553829176, 0.682455\n2898965248, 0.6824554230873283, 0.6824555500182544  …  2.2673901444639477, \n2.0670335967015725, 1.856281803467327, 1.6433610322349588, 1.43773260755362\n28, 1.249622628038894, 1.089014709165961, 0.964086299638045, 0.879715279699\n5076, 0.8375618491417234]\n [1.6813894581935167, 1.6813894979141795, 1.6813895760496735, 1.68138969005\n22025, 1.6813898362183566, 1.6813900097580707, 1.681390204842709, 1.6813904\n14668493, 1.6813906315812168, 1.681390847292351  …  1.8814741145279639, 1.9\n062408314582533, 1.932556304652824, 1.9593615779722884, 1.9854302030584638,\n 2.009456254944375, 2.030184671316311, 2.0465572620802512, 2.05782082872771\n7, 2.0635421902068396]\n [1.5465563234604633, 1.5465563151032578, 1.546556298667805, 1.546556274705\n925, 1.5465562440308058, 1.5465562077004953, 1.5465561669954782, 1.54655612\n33881666, 1.5465560785018047, 1.546556034057256  …  1.9340770272586247, 1.9\n289445685108866, 1.9236144878920916, 1.918294922809417, 1.9132050182112592,\n 1.90856340239867, 1.9045749934046978, 1.9014179583244304, 1.89923295644000\n23, 1.8981161877601427]\n [1.5715361948410418, 1.5715361953311315, 1.57153619629489, 1.5715361976997\n826, 1.5715361994977792, 1.571536201626338, 1.571536204009821, 1.5715362065\n614462, 1.5715362091858556, 1.5715362117823382  …  1.9247785400997206, 1.92\n53926733129951, 1.926022344707277, 1.926643291184795, 1.9272311943883393, 1\n.9277626997857489, 1.9282164458524176, 1.9285740360607109, 1.92882088655398\n73, 1.9289468947014914]\n [1.5684925853534752, 1.5684925853540483, 1.5684925853552447, 1.56849258535\n7125, 1.5684925853597242, 1.5684925853630174, 1.5684925853669094, 1.5684925\n853712433, 1.5684925853758194, 1.5684925853804146  …  1.9259264057842067, 1\n.9258966605641663, 1.9258662870639163, 1.9258364529304535, 1.92580831012103\n66, 1.925782949722734, 1.9257613584940534, 1.9257443790768893, 1.9257326756\n936477, 1.925726706942093]\n ⋮\n [3.519620884001627, 3.5196209320997647, 3.5196209820910895, 3.519621032110\n1122, 3.5196210801507464, 3.5196211241431548, 3.5196211620586335, 3.5196211\n92036574, 3.5196212125280093, 3.5196212224289765  …  0.9122143221397975, 0.\n9122143221401331, 0.9122143221409135, 0.912214322140921, 0.9122143221408562\n, 0.9122143221405419, 0.9122143221403283, 0.9122143221397983, 0.91221432213\n941, 0.9122143221386628]\n [2.6927687450844022, 2.692768793182424, 2.692768843173625, 2.6927688931925\n88, 2.6927689412331732, 2.6927689852255514, 2.692769023140844, 2.6927690531\n18851, 2.692769073610191, 2.692769083511124  …  1.1449286955907596, 1.14492\n86955911178, 1.1449286955915916, 1.1449286955916638, 1.1449286955916267, 1.\n1449286955914064, 1.1449286955911533, 1.144928695590697, 1.1449286955902385\n, 1.1449286955895766]\n [1.6638910873620831, 1.663891135459961, 1.663891185450922, 1.6638912354696\n964, 1.6638912835102115, 1.6638913275024467, 1.6638913654175496, 1.66389139\n53954915, 1.6638914158866707, 1.6638914257875743  …  1.6489243165014276, 1.\n6489243165018714, 1.6489243165020488, 1.648924316502046, 1.6489243165021266\n, 1.6489243165019023, 1.6489243165019143, 1.6489243165013963, 1.64892431650\n0767, 1.6489243165002527]\n [1.1678842944971668, 1.1678843425948444, 1.1678843925856235, 1.16788444260\n42179, 1.1678844906445345, 1.1678845346366145, 1.1678845725515745, 1.167884\n602529421, 1.1678846230205415, 1.1678846329214068  …  2.0516734038388442, 2\n.0516734038391453, 2.0516734038392626, 2.0516734038392577, 2.05167340383931\n45, 2.0516734038391613, 2.0516734038391777, 2.0516734038388256, 2.051673403\n8383984, 2.0516734038380546]\n [0.6069466972096277, 0.6069467453083509, 0.6069467952970033, 0.60694684531\n44846, 0.6069468933526092, 0.6069469373461568, 0.6069469752616932, 0.606947\n00523755, 0.606947025727838, 0.6069470356287272  …  2.7995778606854413, 2.7\n995778606865453, 2.799577860686138, 2.799577860686269, 2.799577860686521, 2\n.7995778606861785, 2.7995778606871626, 2.799577860686091, 2.799577860687871\n, 2.799577860687257]\n [0.47215555277672316, 0.4721556008742116, 0.47215565086411865, 0.472155700\n88207404, 0.4721557489214685, 0.4721557929135511, 0.4721558308283381, 0.472\n15586080552696, 0.4721558812963327, 0.47215589119712137  …  3.1676671971764\n154, 3.16766719717659, 3.167667197176464, 3.1676671971764727, 3.16766719717\n6529, 3.1676671971764807, 3.167667197176733, 3.1676671971765695, 3.16766719\n71770274, 3.1676671971769923]\n [0.4055628704418776, 0.4055629185389692, 0.405562968529316, 0.405563018547\n4488, 0.40556306658728697, 0.4055631105788928, 0.4055631484934412, 0.405563\n1784710878, 0.4055631989620743, 0.40556320886283254  …  3.603368151456505, \n3.603368151456402, 3.6033681514563685, 3.6033681514563423, 3.60336815145633\n8, 3.6033681514563765, 3.6033681514563987, 3.603368151456506, 3.60336815145\n6546, 3.6033681514566753]\n [0.3995929112700888, 0.3995929593673295, 0.39959300935761466, 0.3995930593\n7575146, 0.39959310741552356, 0.39959315140729207, 0.39959318932193655, 0.3\n995932192994949, 0.3995932397904544, 0.39959324969122934  …  3.910174923881\n8027, 3.9101749238817978, 3.9101749238817582, 3.91017492388175, 3.910174923\n881759, 3.910174923881765, 3.9101749238818266, 3.910174923881835, 3.9101749\n238819465, 3.910174923881991]\n [0.42180482514855694, 0.42180487324580856, 0.421804923236389, 0.4218049732\n5473093, 0.42180502129478975, 0.4218050652865224, 0.42180510320119247, 0.42\n18051331789871, 0.4218051536700632, 0.4218051635708545  …  4.32769488090108\n9, 4.327694880901067, 4.327694880901113, 4.3276948809011175, 4.327694880901\n103, 4.327694880901107, 4.327694880901029, 4.327694880901046, 4.32769488090\n09035, 4.327694880900876]","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Visualizing the solution (works best in a terminal):","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"\n@gif for t in sol1.t[1]:0.1:sol1.t[end]\n    off = N^2\n    solt = sol1(t)\n    plt1 = surface(reshape(solt[1:off], N, N), zlims=(0, 5), leg=false)\n    surface!(plt1, reshape(solt[off+1:end], N, N), zlims=(0, 5), leg=false)\n    display(plt1)\nend","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-2:-Optimizing-the-BRUSS-Code","page":"SciML Workshop Exercise Solutions","title":"Part 2: Optimizing the BRUSS Code","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function brusselator_2d_loop(du, u, p, t)\n    A, B, α, xyd = p\n    dx = step(xyd)\n    N = length(xyd)\n    α = α/dx^2\n    limit = a -> let N=N\n        a == N+1 ? 1 :\n        a == 0 ? N :\n        a\n    end\n    II = LinearIndices((N, N, 2))\n\n    @inbounds begin\n        for I in CartesianIndices((N, N))\n            x = xyd[I[1]]\n            y = xyd[I[2]]\n            i = I[1]\n            j = I[2]\n            ip1 = limit(i+1)\n            im1 = limit(i-1)\n            jp1 = limit(j+1)\n            jm1 = limit(j-1)\n\n            ii1 = II[i,j,1]\n            ii2 = II[i,j,2]\n\n            du[II[i,j,1]] = α*(u[II[im1,j,1]] + u[II[ip1,j,1]] + u[II[i,jp1,1]] + u[II[i,jm1,1]] - 4u[ii1]) +\n            B + u[ii1]^2*u[ii2] - (A + 1)*u[ii1] + brusselator_f(x, y, t)\n\n            du[II[i,j,2]] = α*(u[II[im1,j,2]] + u[II[ip1,j,2]] + u[II[i,jp1,2]] + u[II[i,jm1,2]] - 4u[II[i,j,2]]) +\n            A*u[ii1] - u[ii1]^2*u[ii2]\n        end\n    end\n    nothing\nend\n\nprob2 = ODEProblem(brusselator_2d_loop, u0, tspan, p)\n\nsol2 = @time solve(prob2, TRBDF2())","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"8.669444 seconds (9.99 M allocations: 678.160 MiB, 0.52% gc time)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"sol2_2 = @time solve(prob2, CVODE_BDF())","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"35.178275 seconds (1.79 M allocations: 118.117 MiB)\nretcode: Success\nInterpolation: 3rd order Hermite\nt: 259-element Array{Float64,1}:\n  0.0\n  5.653338356947935e-11\n  5.65390369078363e-7\n  2.572950290187468e-6\n  4.580510211296573e-6\n  7.750405709122968e-6\n  1.4302881311757801e-5\n  4.0134710329210774e-5\n  6.596653934666375e-5\n  9.179836836411672e-5\n  ⋮\n 20.115148615356873\n 20.37146777739318\n 20.627786939429484\n 20.88410610146579\n 21.140425263502095\n 21.3967444255384\n 21.653063587574707\n 21.909382749611012\n 22.0\nu: 259-element Array{Array{Float64,1},1}:\n [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  2.5250877095783344, \n2.2620667554742258, 1.9735248771761977, 1.665005111992191, 1.34336401668221\n03, 1.0172186542655526, 0.6977464117458191, 0.4003323380813969, 0.148922584\n53196738, 0.0]\n [6.598117452446044e-8, 6.598117452452795e-8, 6.59811745246415e-8, 6.598117\n452477602e-8, 6.59811745249205e-8, 6.598117452506815e-8, 6.598117452521404e\n-8, 6.598117452535298e-8, 6.598117452548406e-8, 6.598117452560301e-8  …  2.\n52508769326683, 2.26206674160907, 1.9735248663224956, 1.6650051048635588, 1\n.3433640142351067, 1.0172186578909652, 0.6977464237297119, 0.40033236307490\n11, 0.1489226402117897, 8.090751419307918e-8]\n [0.0006587624140132232, 0.0006587624209141625, 0.0006587624326779875, 0.00\n06587624465990196, 0.000658762461542147, 0.000658762476747418, 0.0006587624\n918359335, 0.000658762506258849, 0.0006587625198234356, 0.00065876253213972\n14  …  2.524924606099231, 2.261928123190901, 1.9734163705350949, 1.66493387\n301444, 1.343339621372235, 1.0172550391384978, 0.697866520902045, 0.4005832\n5044085197, 0.14947914535482773, 0.0008077938023952315]\n [0.0029885797701746284, 0.002988579862875722, 0.002988580024412284, 0.0029\n885802153883506, 0.0029885804198764242, 0.002988580626391515, 0.00298858083\n42275124, 0.0029885810313851017, 0.0029885812191603584, 0.00298858138811432\n6  …  2.5243457007698074, 2.261436153310274, 1.9730314375969087, 1.66468138\n01159555, 1.3432536595673659, 1.0173853107174544, 0.6982952263862713, 0.401\n48198029752397, 0.1514529070863203, 0.003664729223250155]\n [0.005306141508030984, 0.005306142690205768, 0.005306142257972833, 0.00530\n6142797468204, 0.005306143401977575, 0.00530614493691719, 0.005306148087986\n683, 0.0053061452495214295, 0.005306149230355061, 0.005306149723653397  …  \n2.5237671078891086, 2.2609445550730123, 1.972646967738447, 1.66442950038285\n24, 1.3431685811161493, 1.0175170325180882, 0.698726972801953, 0.4023908498\n594301, 0.15342343126294944, 0.0065066953025461555]\n [0.008938531142281401, 0.00893853412998814, 0.008938533324753955, 0.008938\n534851373863, 0.008938536624027108, 0.008938540672423655, 0.008938548169476\n477, 0.00893854209409423, 0.008938551523646868, 0.008938552952542707  …  2.\n5228542226523203, 2.2601691664198333, 1.9720409392385245, 1.664033168895644\n7, 1.3430362416837864, 1.0177283298803772, 0.6994157785454703, 0.4038476392\n5678996, 0.15652765095572066, 0.010961135026978663]\n [0.016344145375892745, 0.016344150679504905, 0.016344153382255998, 0.01634\n4159160398462, 0.01634416578191356, 0.016344175003834897, 0.016344186710899\n49, 0.016344185944460035, 0.01634419915335025, 0.01634420450260158  …  2.52\n09699686322784, 2.2585696653032357, 1.9707923492854083, 1.6632194124484905,\n 1.3427706997876703, 1.0181786440181924, 0.7008691316897557, 0.406937430466\n94203, 0.16291636532495113, 0.020043247383951576]\n [0.04433812091521405, 0.04433815867165508, 0.04433820623536491, 0.04433827\n157330291, 0.044338347135081634, 0.044338431939997466, 0.044338515477739565\n, 0.04433857623295058, 0.044338655086562505, 0.04433871696545116  …  2.5135\n78240692516, 2.252307885072983, 1.9659255801385158, 1.66008673108698, 1.341\n8375910046947, 1.0201544536483305, 0.7070145269795118, 0.4198921130658216, \n0.18773948635125548, 0.054381120820077296]\n [0.07058737985116977, 0.07058664484029947, 0.0705875413280103, 0.070587855\n81917236, 0.0705879729541195, 0.070587289183245, 0.07058596349206522, 0.070\n58829612748044, 0.07058625771406031, 0.0705864535189533  …  2.5062449271565\n765, 2.2461167960972164, 1.961149034074087, 1.6570783972413137, 1.341096371\n9495257, 1.0224707341431893, 0.7138163912529947, 0.4338374639900661, 0.2119\n8260672435237, 0.08658995681881776]\n [0.09534502498283606, 0.09534358538038319, 0.09534532706763858, 0.09534608\n102785042, 0.09534625281411645, 0.09534489421692781, 0.09534277774807996, 0\n.0953468096914476, 0.09534337195439287, 0.09534381035303054  …  2.498970563\n5047277, 2.2399977238708053, 1.9564660515271148, 1.6542026515183286, 1.3405\n654586114462, 1.0251552440356688, 0.7212413308882024, 0.44843068771835926, \n0.23564736424496766, 0.1169787925933724]\n ⋮\n [0.6323810451914815, 0.632427052649651, 0.6324748742136165, 0.632522725663\n7151, 0.632568687588502, 0.6326107791949938, 0.6326470583214443, 0.63267574\n42982498, 0.6326953532738601, 0.632704828378052  …  2.770008193556327, 2.77\n0008208734769, 2.7700082189120816, 2.7700082237279133, 2.7700082230441634, \n2.7700082168913203, 2.7700082054620894, 2.770008189124797, 2.77000816842502\n84, 2.7700081440708226]\n [0.5226275087207661, 0.5226734342910327, 0.5227211719697351, 0.52276894073\n76451, 0.5228148244346382, 0.5228568454418254, 0.5228930645349704, 0.522921\n7036079294, 0.5229412808642269, 0.5229507408309406  …  3.0270587055167733, \n3.0270586753006343, 3.0270586550848355, 3.027058645472268, 3.02705864680864\n9, 3.027058659063031, 3.0270586818168277, 3.0270587143052663, 3.02705875544\n77606, 3.0270588038594153]\n [0.4579604087410305, 0.458006296802263, 0.4580539960946591, 0.458101726935\n9897, 0.45814757462705746, 0.458189563162972, 0.45822575460980086, 0.458254\n3720215345, 0.4582739347433197, 0.458283387662069  …  3.2613243481002447, 3\n.2613242970972784, 3.261324263504071, 3.2613242471006543, 3.261324249141863\n7, 3.261324269879769, 3.261324308306207, 3.2613243629016937, 3.261324432013\n5792, 3.2613245136746594]\n [0.4243249949117141, 0.4243708716334364, 0.4244185592849013, 0.42446627872\n460485, 0.42451211572444175, 0.42455409459691923, 0.42459027785523756, 0.42\n46188889172981, 0.42463844725967403, 0.42464789817336857  …  3.476979389713\n562, 3.4769793324322897, 3.476979294466571, 3.476979276125042, 3.4769792785\n14862, 3.476979301782493, 3.4769793449316233, 3.476979406359194, 3.47697948\n4132899, 3.4769795758778326]\n [0.4100847046913288, 0.4101305921364255, 0.4101782907401593, 0.41022602107\n792533, 0.41027186852471176, 0.4103138568061762, 0.41035004810598086, 0.410\n37866551793173, 0.4103982280350711, 0.4104076810589709  …  3.67907975182885\n67, 3.6790797004957008, 3.679079666185172, 3.679079649844482, 3.67907965210\n2726, 3.679079672926244, 3.679079711585095, 3.6790797667656774, 3.679079836\n642917, 3.679079918887027]\n [0.4073307682105559, 0.4073766856477378, 0.4074244149682815, 0.40747217562\n354593, 0.4075180518070638, 0.40756006601996625, 0.40759627938780474, 0.407\n62491406752893, 0.4076444882216691, 0.407653946842301  …  3.87153703747294,\n 3.8715370027640295, 3.8715369794090573, 3.871536968411483, 3.8715369700022\n073, 3.8715369840696034, 3.8715370102065285, 3.871537047588856, 3.871537094\n929266, 3.871537150541017]\n [0.4116592888096325, 0.41170525037260386, 0.4117530249037378, 0.4118008301\n185253, 0.41184674845518116, 0.41188880071685885, 0.4119250464392734, 0.411\n9537063944312, 0.41197329765271995, 0.4119827644270476  …  4.05641774845540\n05, 4.05641773820175, 4.056417731164946, 4.056417727958729, 4.0564177284843\n43, 4.056417732631651, 4.056417740353393, 4.056417751458394, 4.056417765516\n157, 4.056417781927513]\n [0.421178883717942, 0.42122490081186037, 0.42127273224506245, 0.4213205935\n2132606, 0.42136656486420737, 0.42140866497435914, 0.421444951375888, 0.421\n4736430958104, 0.42149325587312986, 0.4215027328817772  …  4.23412681426794\n4, 4.234126834790803, 4.234126848384466, 4.234126854951361, 4.2341268540976\n16, 4.234126845769279, 4.234126830318249, 4.234126808309182, 4.234126780420\n57, 4.234126747488131]\n [0.4255569709603833, 0.42560301293838904, 0.42565086989133055, 0.425698756\n25778114, 0.4257447512526154, 0.4257868727264482, 0.42582317727042507, 0.42\n585188312176897, 0.42587150553824715, 0.42588098706735406  …  4.29522520924\n0007, 4.295225243549162, 4.295225266516079, 4.295225277416021, 4.2952252758\n90809, 4.295225261987599, 4.295225236161456, 4.2952251992579855, 4.29522515\n2494508, 4.295225097441233]","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-3:-Exploiting-Jacobian-Sparsity-with-Color-Differentiation","page":"SciML Workshop Exercise Solutions","title":"Part 3: Exploiting Jacobian Sparsity with Color Differentiation","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using SparseDiffTools, SparsityDetection\n\nsparsity_pattern = jacobian_sparsity(brusselator_2d_loop,similar(u0),u0,p,2.0)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Explored path: SparsityDetection.Path(Bool[], 1)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"jac_sp = sparse(sparsity_pattern)\njac = Float64.(jac_sp)\ncolors = matrix_colors(jac)\nprob3 = ODEProblem(ODEFunction(brusselator_2d_loop, colorvec=colors,jac_prototype=jac_sp), u0, tspan, p)\nsol3 = @time solve(prob3, TRBDF2())","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Error: InexactError: Bool(-38444.40000000001)","category":"page"},{"location":"exercises/02-workshop_solutions/#(Optional)-Part-4:-Structured-Jacobians","page":"SciML Workshop Exercise Solutions","title":"(Optional) Part 4: Structured Jacobians","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#(Optional)-Part-5:-Automatic-Symbolicification-and-Analytical-Jacobian","page":"SciML Workshop Exercise Solutions","title":"(Optional) Part 5: Automatic Symbolicification and Analytical Jacobian","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-6:-Utilizing-Preconditioned-GMRES-Linear-Solvers","page":"SciML Workshop Exercise Solutions","title":"Part 6: Utilizing Preconditioned-GMRES Linear Solvers","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using DiffEqOperators\nusing Sundials\nusing AlgebraicMultigrid: ruge_stuben, aspreconditioner, smoothed_aggregation\nprob6 = ODEProblem(ODEFunction(brusselator_2d_loop, jac_prototype=JacVecOperator{Float64}(brusselator_2d_loop, u0)), u0, tspan, p)\nII = Matrix{Float64}(I, N, N)\nOp = kron(Matrix{Float64}(I, 2, 2), kron(D2, II) + kron(II, D2))\nWapprox = -I+Op\n#ml = ruge_stuben(Wapprox)\nml = smoothed_aggregation(Wapprox)\nprecond = aspreconditioner(ml)\nsol_trbdf2 = @time solve(prob6, TRBDF2(linsolve=LinSolveGMRES())); # no preconditioner","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"11.528428 seconds (12.99 M allocations: 4.895 GiB, 2.71% gc time)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"sol_trbdf2 = @time solve(prob6, TRBDF2(linsolve=LinSolveGMRES(Pl=lu(Wapprox)))); # sparse LU","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"3.489017 seconds (6.15 M allocations: 716.016 MiB, 1.73% gc time)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"sol_trbdf2 = @time solve(prob6, TRBDF2(linsolve=LinSolveGMRES(Pl=precond))); # AMG","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"3.107065 seconds (6.18 M allocations: 536.155 MiB, 2.83% gc time)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"sol_cvodebdf = @time solve(prob2, CVODE_BDF(linear_solver=:GMRES));","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"1.651483 seconds (1.90 M allocations: 204.526 MiB)\nretcode: Success\nInterpolation: 3rd order Hermite\nt: 1928-element Array{Float64,1}:\n  0.0\n  5.653338356947935e-11\n  5.65390369078363e-7\n  2.57289768832925e-6\n  4.5804050075801365e-6\n  7.750237020809387e-6\n  1.430297275427241e-5\n  3.947737124517274e-5\n  6.465176973607307e-5\n  8.982616822697341e-5\n  ⋮\n 21.74842347830861\n 21.75377749261479\n 21.770859233529922\n 21.787940974445053\n 21.800484442937336\n 21.813027911429618\n 21.844693963335253\n 21.950342098966686\n 22.0\nu: 1928-element Array{Array{Float64,1},1}:\n [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  2.5250877095783344, \n2.2620667554742258, 1.9735248771761977, 1.665005111992191, 1.34336401668221\n03, 1.0172186542655526, 0.6977464117458191, 0.4003323380813969, 0.148922584\n53196738, 0.0]\n [6.598117452445592e-8, 6.598117452452327e-8, 6.598117452463697e-8, 6.59811\n7452477148e-8, 6.598117452491596e-8, 6.598117452506346e-8, 6.59811745252089\n2e-8, 6.598117452534844e-8, 6.598117452547893e-8, 6.598117452559789e-8  …  \n2.52508769326683, 2.26206674160907, 1.9735248663224956, 1.6650051048635588,\n 1.3433640142351067, 1.0172186578909652, 0.6977464237297119, 0.400332363074\n9011, 0.1489226402117897, 8.090751419307378e-8]\n [0.0006587624172964451, 0.0006587624240399749, 0.0006587624354243716, 0.00\n06587624488920072, 0.0006587624633585051, 0.0006587624781271849, 0.00065876\n24926919035, 0.000658762506662457, 0.0006587625197283628, 0.000658762531638\n6175  …  2.5249246059817017, 2.2619281230446204, 1.973416370341658, 1.66493\n38727357148, 1.3433396209127182, 1.0172550381632066, 0.69786651676992, 0.40\n05832569059138, 0.14947914564976048, 0.0008077937954087897]\n [0.0029885190994651673, 0.0029885191897600113, 0.0029885193423737177, 0.00\n29885195232632685, 0.002988519717653178, 0.002988519916140473, 0.0029885201\n11906188, 0.002988520299697163, 0.0029885204753350315, 0.002988520635442596\n3  …  2.524345713343465, 2.261436162970071, 1.973031443407278, 1.6646813805\n594152, 1.343253651586457, 1.017385285060445, 0.698295128369312, 0.40148209\n36914462, 0.15145286366257169, 0.0036646545802277134]\n [0.005306022356073513, 0.005306022621712586, 0.0053060230717453995, 0.0053\n06023607201543, 0.005306024183137538, 0.005306024771435465, 0.0053060253517\n8454, 0.005306025908561257, 0.005306026429347995, 0.005306026904112427  …  \n2.5237671339498102, 2.260944575638989, 1.9726469809636227, 1.66442950338789\n62, 1.343168568455559, 1.0175169867522391, 0.6987268229191962, 0.4023910083\n0343055, 0.15342334401815053, 0.0065065496316772335]\n [0.00893834350995413, 0.00893834427987621, 0.00893834558850756, 0.00893834\n7153465821, 0.008938348839052852, 0.008938350561768801, 0.00893835226170432\n, 0.008938353892881468, 0.008938355418797277, 0.008938356809979058  …  2.52\n28542649298107, 2.2601692000771423, 1.9720409612790466, 1.66403317465477, 1\n.3430362221641639, 1.017728256881341, 0.6994155885173241, 0.403847823621840\n9, 0.15652751916175822, 0.01096090625912015]\n [0.01634429202116057, 0.01634429489952914, 0.016344299822335723, 0.0163443\n0576423857, 0.016344312182172048, 0.016344318748721217, 0.01634432523215556\n5, 0.01634433145550153, 0.01634433727856935, 0.016344342588309163  …  2.520\n9699337854867, 2.258569632374003, 1.970792317068139, 1.6632193768804995, 1.\n3427706450978134, 1.0181785268879573, 0.7008693575988351, 0.406937285311047\n1, 0.16291664462188093, 0.0200434281564615]\n [0.043646263363862924, 0.043646292669642976, 0.04364634410002619, 0.043646\n408299418085, 0.043646478690166544, 0.0436465511401205, 0.04364662287963492\n, 0.04364669185715508, 0.043646756468291935, 0.04364681542761546  …  2.5137\n65529699384, 2.2524662162038327, 1.96604803719552, 1.6601642835144645, 1.34\n18578790218518, 1.0201021423806298, 0.7068529962881926, 0.41955020644048985\n, 0.1871136496191611, 0.05353236358962729]\n [0.0692823968869293, 0.06928248583818256, 0.06928264396753456, 0.069282844\n55502629, 0.06928306665139533, 0.06928329638678168, 0.06928352441574115, 0.\n06928374395054913, 0.06928394975415433, 0.06928413765698549  …  2.506616550\n182622, 2.2464297079132223, 1.9613890075261213, 1.6572267432709649, 1.34112\n728871286, 1.0223507377796497, 0.7134630924575552, 0.43311194946272524, 0.2\n1076011686633297, 0.08498786962833081]\n [0.09349042837387436, 0.09349061562324566, 0.09349095207267255, 0.09349138\n44519549, 0.09349186761490513, 0.0934923699926786, 0.09349286998656095, 0.0\n9349335206219281, 0.09349380438256111, 0.09349421759820462  …  2.4995234731\n16373, 2.240461415578458, 1.956818523753225, 1.65441487227758, 1.3405970544\n326884, 1.0249482572805424, 0.720666723995856, 0.447302887948819, 0.2338561\n2858767357, 0.11470081104803237]\n ⋮\n [0.3797955575005551, 0.3798129120680182, 0.37983160912795294, 0.3798515167\n9769735, 0.3798700744173499, 0.3798877958739413, 0.37990413586835, 0.379917\n73881418767, 0.3799267950426437, 0.3799309569353526  …  3.4574052823485664,\n 3.4573936286619094, 3.457386402854468, 3.4573827565631308, 3.4573831040940\n81, 3.4573876418782974, 3.457395923872096, 3.4574086494131495, 3.4574240121\n578605, 3.4574420811420903]\n [0.37958401654816143, 0.3796201588394765, 0.37965786768047793, 0.379695834\n60132494, 0.3797327833587292, 0.379767041189448, 0.37979645035002474, 0.379\n81940648060253, 0.37983513643422023, 0.3798427397648622  …  3.4617077059990\n3, 3.4616995134797413, 3.4616938254044576, 3.4616910792093196, 3.4616914818\n578866, 3.4616948057305494, 3.46170100881632, 3.4617097544879343, 3.4617206\n586988303, 3.4617334162991207]\n [0.37898131515329514, 0.37904455623143324, 0.3791102395621268, 0.379171848\n92573214, 0.3792278014621423, 0.37927854226433344, 0.3793222968917526, 0.37\n935935408014265, 0.3793873038928219, 0.37940252613199893  …  3.475400682841\n286, 3.4754021781703925, 3.475405250938518, 3.4754068566952996, 3.475406283\n915746, 3.475404220521274, 3.475401075649539, 3.4754010132857456, 3.4754017\n445012275, 3.4754014416136703]\n [0.3784028728681648, 0.37847935063114085, 0.37855821248433963, 0.378635433\n8343628, 0.3787103744504435, 0.37877900390104313, 0.3788373625105384, 0.378\n88198986151156, 0.37891190751041437, 0.37892669234514176  …  3.489080362945\n1366, 3.489089294219412, 3.489094650501359, 3.489097497162135, 3.4890973438\n878747, 3.489093753047733, 3.489087808019096, 3.4890784385409153, 3.4890666\n40825046, 3.489052679244454]\n [0.37802806562457314, 0.3781081068261598, 0.37819023494543214, 0.378268702\n7300955, 0.37834355080180027, 0.37841307565234206, 0.37847181048385786, 0.3\n785172210264568, 0.37854884544138667, 0.3785659311574103  …  3.499071751303\n758, 3.4990834581052974, 3.4990920535881895, 3.499096339156102, 3.499095815\n52635, 3.4990905269259645, 3.49908103431579, 3.4990696874410214, 3.49905517\n5741332, 3.4990372237525125]\n [0.3776909382220414, 0.37776351115109563, 0.37783859475543263, 0.377912506\n00268866, 0.37798520447195416, 0.37805140767486484, 0.37810798564087067, 0.\n37815118643386414, 0.3781792196305945, 0.37819286030587723  …  3.5090277181\n657115, 3.5090394826004574, 3.5090464815977596, 3.509050187200965, 3.509049\n8417172786, 3.509045416275706, 3.5090377144093337, 3.509024825081179, 3.509\n0089285477553, 3.508989993790065]\n [0.3768537939605036, 0.376915458761548, 0.3769793531358606, 0.377042729545\n79915, 0.37710281438118, 0.3771570791988641, 0.37720388440231123, 0.3772415\n338113573, 0.37726733457251116, 0.3772798488606232  …  3.5341352486353617, \n3.5341466559569223, 3.534154680705109, 3.534158571433794, 3.534157981996896\n2, 3.5341533014526756, 3.5341445069751627, 3.534132413334222, 3.53411749417\n5883, 3.5340999041834755]\n [0.3740747443719409, 0.3741028206103584, 0.3741325900228058, 0.37416663902\n824293, 0.3742006984167679, 0.3742310255447786, 0.3742579572053362, 0.37427\n89270608717, 0.3742919258904212, 0.37429598291067795  …  3.6178769692717765\n, 3.6178851739555844, 3.617889139403817, 3.6178908996243493, 3.617890994937\n32, 3.617888791395569, 3.6178843129218543, 3.617874139997575, 3.61786105897\n74163, 3.617847139077364]\n [0.37278515952965974, 0.3728179321140629, 0.3728522412070423, 0.3728876482\n7093895, 0.37291708637372784, 0.37294295966405455, 0.37296625674297096, 0.3\n7298877738348996, 0.3730068685691214, 0.3730153360421533  …  3.657191327231\n621, 3.6571972377609487, 3.65720344716516, 3.6572059278358457, 3.6572051957\n615703, 3.6572021410971995, 3.6571953691210877, 3.657189705548747, 3.657182\n8565260756, 3.6571749711705777]","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-7:-Exploring-IMEX-and-Exponential-Integrator-Techniques-(E)","page":"SciML Workshop Exercise Solutions","title":"Part 7: Exploring IMEX and Exponential Integrator Techniques (E)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function laplacian2d(du, u, p, t)\n    A, B, α, xyd = p\n    dx = step(xyd)\n    N = length(xyd)\n    du = reshape(du, N, N, 2)\n    u = reshape(u, N, N, 2)\n    @inbounds begin\n        α = α/dx^2\n        limit = a -> let N=N\n            a == N+1 ? 1 :\n            a == 0 ? N :\n            a\n        end\n        for I in CartesianIndices((N, N))\n            x = xyd[I[1]]\n            y = xyd[I[2]]\n            i = I[1]\n            j = I[2]\n            ip1 = limit(i+1)\n            im1 = limit(i-1)\n            jp1 = limit(j+1)\n            jm1 = limit(j-1)\n            du[i,j,1] = α*(u[im1,j,1] + u[ip1,j,1] + u[i,jp1,1] + u[i,jm1,1] - 4u[i,j,1])\n            du[i,j,2] = α*(u[im1,j,2] + u[ip1,j,2] + u[i,jp1,2] + u[i,jm1,2] - 4u[i,j,2])\n        end\n    end\n    nothing\nend\nfunction brusselator_reaction(du, u, p, t)\n    A, B, α, xyd = p\n    dx = step(xyd)\n    N = length(xyd)\n    du = reshape(du, N, N, 2)\n    u = reshape(u, N, N, 2)\n    @inbounds begin\n        for I in CartesianIndices((N, N))\n            x = xyd[I[1]]\n            y = xyd[I[2]]\n            i = I[1]\n            j = I[2]\n            du[i,j,1] = B + u[i,j,1]^2*u[i,j,2] - (A + 1)*u[i,j,1] + brusselator_f(x, y, t)\n            du[i,j,2] = A*u[i,j,1] - u[i,j,1]^2*u[i,j,2]\n        end\n    end\n    nothing\nend\nprob7 = SplitODEProblem(laplacian2d, brusselator_reaction, u0, tspan, p)\nsol7 = @time solve(prob7, KenCarp4())","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"6.407620 seconds (11.98 M allocations: 783.753 MiB, 1.66% gc time)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"M = MatrixFreeOperator((du,u,p)->laplacian2d(du, u, p, 0), (p,), size=(2*N^2, 2*N^2), opnorm=1000)\nprob7_2 = SplitODEProblem(M, brusselator_reaction, u0, tspan, p)\nsol7_2 = @time solve(prob7_2, ETDRK4(krylov=true), dt=1)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"2.917810 seconds (8.83 M allocations: 560.794 MiB, 4.01% gc time)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"prob7_3 = SplitODEProblem(DiffEqArrayOperator(Op), brusselator_reaction, u0, tspan, p)\nsol7_3 = solve(prob7_3, KenCarp4());","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"retcode: Success\nInterpolation: 3rd order Hermite\nt: 411-element Array{Float64,1}:\n  0.0\n  2.888065882181688e-5\n  0.00031768724703998567\n  0.0027059840153272462\n  0.008731809471821457\n  0.02179419538626385\n  0.046044933347512154\n  0.08666612492700337\n  0.14668700100553306\n  0.2429330434920095\n  ⋮\n 21.642678211001897\n 21.669167858631038\n 21.69565750626018\n 21.745650901936376\n 21.842907495920542\n 21.862544058930474\n 21.883418684049154\n 21.924650607598824\n 22.0\nu: 411-element Array{Array{Float64,1},1}:\n [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  2.5250877095783344, \n2.2620667554742258, 1.9735248771761977, 1.665005111992191, 1.34336401668221\n03, 1.0172186542655526, 0.6977464117458191, 0.4003323380813969, 0.148922584\n53196738, 0.0]\n [0.00338181359279749, 0.003381814525055848, 0.0033818161026810765, 0.00338\n18179763281625, 0.0033818199908016255, 0.003381822048157553, 0.003381824077\n5272284, 0.0033818260243597817, 0.00338182784528272, 0.003381829505247768  \n…  2.524255066788988, 2.261359157113013, 1.9729712293922774, 1.664641937979\n7444, 1.3432403152050174, 1.0174058169618412, 0.6983623120712237, 0.4016217\n8277595556, 0.1517635265052733, 0.004115818959992079]\n [0.03568250376202336, 0.03568266931785142, 0.035682955832227074, 0.0356833\n0729754052, 0.03568368941345571, 0.03568408140938937, 0.03568446895364048, \n0.035684841242777064, 0.035685189766591796, 0.03568550768135772  …  2.51599\n73402014577, 2.2543598849568935, 1.967523764161279, 1.6611194391842758, 1.3\n421496263916268, 1.0195052150551678, 0.704979868148862, 0.4156649097840782,\n 0.17979934864987152, 0.04350153844352491]\n [0.2388870086712341, 0.23890840746265182, 0.23894852951279852, 0.239002926\n71217413, 0.23906668747399049, 0.23913531679710034, 0.23920518662122434, 0.\n2392735177564327, 0.2393382102869443, 0.23939766131788623  …  2.45177455071\n75612, 2.2013122441306154, 1.9285687665074842, 1.6402584486989873, 1.345213\n7788742935, 1.0552180035855303, 0.7857635817095209, 0.5558670473603251, 0.3\n8607263451905216, 0.29539374940409546]\n [0.5564106150796982, 0.5566108464330898, 0.5569986710045511, 0.55755022257\n69137, 0.5582336728011149, 0.5590119152749861, 0.559846526329856, 0.5606997\n95457231, 0.561537663173318, 0.5623298108904917  …  2.3212076996976343, 2.1\n072090690298686, 1.880355997024359, 1.6487387710243555, 1.4216785859442722,\n 1.2094079500272332, 1.0225411460886549, 0.8713229853793858, 0.764708535522\n895, 0.7095402391463423]\n [0.9342714734084758, 0.9349598918146564, 0.936310382519549, 0.938262165081\n3462, 0.9407415908113002, 0.9436441970638244, 0.9468551430516244, 0.9502481\n957941415, 0.9536902430916663, 0.957050094472094  …  2.1614414096004184, 2.\n027111451991201, 1.8887980771792972, 1.751800690784729, 1.6215018392791603,\n 1.5031551617020042, 1.4016704666279294, 1.321363816947498, 1.2657330373145\n712, 1.2372638912267229]\n [1.2566772231894945, 1.2576431810047317, 1.2595383902093107, 1.26229311347\n9925, 1.2658028435853461, 1.2699372640323565, 1.274540022703064, 1.27943691\n0349005, 1.2844410563581503, 1.2893600761202952  …  2.0368655159549163, 1.9\n851294449856716, 1.9322949399059546, 1.8803923426225904, 1.8314233258837715\n, 1.7872824916440149, 1.749687377223869, 1.7201110332114784, 1.699714353288\n5108, 1.689307976958115]\n [1.4173304157928486, 1.4178104626035777, 1.4187536323652747, 1.42012345899\n5461, 1.421869253600005, 1.4239236083651097, 1.4262077943444462, 1.42863463\n98967849, 1.4311109979822425, 1.4335434070534994  …  1.984707244631404, 1.9\n744843346627017, 1.9640642411192235, 1.9538390653254547, 1.9442016835060763\n, 1.9355229382392862, 1.9281377603979366, 1.9223312732585927, 1.91833313347\n7084, 1.9162957064303392]\n [1.4079292375651262, 1.4080181845337447, 1.4081926434529766, 1.40844579737\n3808, 1.40876792341743, 1.4091467072462807, 1.4095677840064875, 1.410015143\n058539, 1.410471755723265, 1.4109202040012978  …  2.006848717030137, 2.0058\n633341206855, 2.004859241773954, 2.003874429852624, 2.0029462538824254, 2.0\n02109807224481, 2.0013971225351015, 2.000835759821026, 2.000448425718132, 2\n.0002507800301195]\n [1.3008722049712922, 1.3008801828116636, 1.3008945778368928, 1.30091484490\n6319, 1.3009396166641172, 1.3009679104321659, 1.3009992327229458, 1.3010331\n324351492, 1.3010682282392434, 1.3011028322919374  …  2.084972574467494, 2.\n0849211490150776, 2.0848702925700606, 2.0848214163333547, 2.08477743413165,\n 2.084738198481765, 2.0847036216234702, 2.084673859207271, 2.08465246394274\n, 2.0846409823084646]\n ⋮\n [0.39890859367367754, 0.3993441673525077, 0.3997975806788334, 0.4002518902\n321085, 0.4006888182480096, 0.4010893923770546, 0.40143496888258334, 0.4017\n0842611233254, 0.401895469313635, 0.40198591841037423  …  3.974042467040040\n7, 3.9740400700975256, 3.974038463649698, 3.974037701900219, 3.974037809267\n5783, 3.9740387819095946, 3.974040587360848, 3.974043164462041, 3.974046422\n7965795, 3.974050246993257]\n [0.399359295339172, 0.39974889839511, 0.40014696627279867, 0.4005384174406\n543, 0.4009068845049872, 0.40123752344283037, 0.40151687180652956, 0.401733\n60655661844, 0.401879356549643, 0.4019484860747507  …  3.9932059688091033, \n3.9932038478068232, 3.9932024382289315, 3.9932017744025847, 3.9932018738678\n297, 3.99320272691542, 3.993204321872256, 3.993206602084878, 3.993209523141\n2905, 3.9932129859626735]\n [0.3993686665009743, 0.39980665253816694, 0.4002705836448292, 0.4007431063\n3130167, 0.40120406441906215, 0.4016317190585153, 0.4020041495019104, 0.402\n30097607591025, 0.40250515220793087, 0.4026046039165201  …  4.0122858125097\n78, 4.012284245475603, 4.012283191763723, 4.01228269079853, 4.0122827626693\n17, 4.012283404160809, 4.012284589905506, 4.012286273787084, 4.012288391829\n275, 4.012290860181647]\n [0.4010117037388889, 0.4014585319070676, 0.40192471908753297, 0.4023929107\n571625, 0.40284400510226775, 0.4032581888842881, 0.4036158867371329, 0.4038\n991410242888, 0.4040929782391569, 0.40418678544141134  …  4.048074184182981\n5, 4.048072793476128, 4.048071860809855, 4.0480714180078925, 4.048071480580\n622, 4.04807204591452, 4.048073094164494, 4.0480745886306035, 4.04807647493\n2387, 4.048078682581573]\n [0.4040391360250253, 0.4044781455356283, 0.40493508964458735, 0.4053928897\n130187, 0.40583313109968033, 0.4062367046948323, 0.4065848385324651, 0.4068\n602985846021, 0.40704869896301227, 0.40713979724380694  …  4.11688589803744\n4, 4.116885469878567, 4.116885180300814, 4.116885042860157, 4.1168850632805\n38, 4.1168852404840575, 4.116885566552351, 4.116886026211559, 4.11688659676\n3158, 4.116887250002496]\n [0.4047700956071005, 0.40519815829045214, 0.4056399542593235, 0.4060787935\n4982956, 0.40649646573647547, 0.4068752731237485, 0.4071985546331393, 0.407\n45169655229097, 0.40762327673507454, 0.4077054230583039  …  4.1306436987736\n2, 4.130643465603472, 4.130643313409505, 4.130643244570406, 4.1306432586828\n51, 4.130643353557858, 4.130643529891911, 4.130643781395985, 4.130644101166\n296, 4.130644470170689]\n [0.405168629966455, 0.4055798821600529, 0.40601390501288664, 0.40645506728\n755565, 0.4068852428751017, 0.4072847292800238, 0.4076332639179229, 0.40791\n16747690355, 0.40810359543776764, 0.40819724273804125  …  4.145219717875681\n, 4.145219791546891, 4.145219834102426, 4.14521985299266, 4.145219852795447\n, 4.145219832891524, 4.145219787681931, 4.145219708636722, 4.14521958516251\n4, 4.145219403944229]\n [0.40704121426682677, 0.40748978803601077, 0.4079566870477457, 0.408424669\n7332447, 0.40887498057174415, 0.4092881700600071, 0.40964487371286185, 0.40\n9927358248609, 0.4101206777465779, 0.41021423546960456  …  4.17385578570464\n1, 4.17385633196801, 4.173856695023444, 4.173856867186141, 4.17385684409214\n35, 4.173856625935988, 4.173856217791514, 4.173855628428838, 4.173854869192\n83, 4.173853955130709]\n [0.4104280757891703, 0.4108700639501849, 0.41132984460416, 0.4117903516752\n1066, 0.41223306465343723, 0.41263893115959094, 0.41298899290397084, 0.4132\n6603039541165, 0.4134554904299645, 0.4135471107118313  …  4.225664869407304\n, 4.225666277355228, 4.225667215715375, 4.22566766028349, 4.225667599839396\n, 4.225667035917906, 4.225665982952057, 4.225664468355488, 4.22566253340619\n55, 4.225660233615377]","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-8:-Work-Precision-Diagrams-for-Benchmarking-Solver-Choices","page":"SciML Workshop Exercise Solutions","title":"Part 8: Work-Precision Diagrams for Benchmarking Solver Choices","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using DiffEqDevTools\nabstols = 0.1 .^ (5:8)\nreltols = 0.1 .^ (1:4)\nsol = solve(prob3,CVODE_BDF(linear_solver=:GMRES),abstol=1/10^7,reltol=1/10^10)\ntest_sol = TestSolution(sol)\nprobs = [prob2, prob3, prob6]\nsetups = [Dict(:alg=>CVODE_BDF(),:prob_choice => 1),\n          Dict(:alg=>CVODE_BDF(linear_solver=:GMRES), :prob_choice => 1),\n          Dict(:alg=>TRBDF2(), :prob_choice => 1),\n          Dict(:alg=>TRBDF2(linsolve=LinSolveGMRES(Pl=precond)), :prob_choice => 3),\n          Dict(:alg=>TRBDF2(), :prob_choice => 2)\n         ]\nlabels = [\"CVODE_BDF (dense)\" \"CVODE_BDF (GMRES)\" \"TRBDF2 (dense)\" \"TRBDF2 (sparse)\" \"TRBDF2 (GMRES)\"]\nwp = WorkPrecisionSet(probs,abstols,reltols,setups;appxsol=[test_sol,test_sol,test_sol],save_everystep=false,numruns=3,\n  names=labels, print_names=true, seconds=0.5)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"CVODE_BDF (dense)\nCVODE_BDF (GMRES)\nTRBDF2 (dense)\nTRBDF2 (sparse)\nTRBDF2 (GMRES)\nError: InexactError: Bool(-38444.40000000001)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"plot(wp)","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Error: UndefVarError: wp not defined","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-9:-GPU-Parallelism-for-PDEs-(E)","page":"SciML Workshop Exercise Solutions","title":"Part 9: GPU-Parallelism for PDEs (E)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-10:-Adjoint-Sensitivity-Analysis-for-Gradients-of-PDEs","page":"SciML Workshop Exercise Solutions","title":"Part 10: Adjoint Sensitivity Analysis for Gradients of PDEs","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Problem-5:-Global-Parameter-Sensitivity-and-Optimality-with-GPU-and-Distributed-Ensembles-(B)","page":"SciML Workshop Exercise Solutions","title":"Problem 5: Global Parameter Sensitivity and Optimality with GPU and Distributed Ensembles (B)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-1:-Implementing-the-Henon-Heiles-System-(B)","page":"SciML Workshop Exercise Solutions","title":"Part 1: Implementing the Henon-Heiles System (B)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function henon(dz,z,p,t)\n  p₁, p₂, q₁, q₂ = z[1], z[2], z[3], z[4]\n  dp₁ = -q₁*(1 + 2q₂)\n  dp₂ = -q₂-(q₁^2 - q₂^2)\n  dq₁ = p₁\n  dq₂ = p₂\n\n  dz .= [dp₁, dp₂, dq₁, dq₂]\n  return nothing\nend\n\nu₀ = [0.1, 0.0, 0.0, 0.5]\nprob = ODEProblem(henon, u₀, (0., 1000.))\nsol = solve(prob, Vern9(), abstol=1e-14, reltol=1e-14)\n\nplot(sol, vars=[(3,4,1)], tspan=(0,100))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#(Optional)-Part-2:-Alternative-Dynamical-Implmentations-of-Henon-Heiles-(B)","page":"SciML Workshop Exercise Solutions","title":"(Optional) Part 2: Alternative Dynamical Implmentations of Henon-Heiles (B)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function henon(ddz,dz,z,p,t)\n  p₁, p₂ = dz[1], dz[2]\n  q₁, q₂ = z[1], z[2]\n  ddq₁ = -q₁*(1 + 2q₂)\n  ddq₂ = -q₂-(q₁^2 - q₂^2)\n\n  ddz .= [ddq₁, ddq₂]\nend\n\np₀ = u₀[1:2]\nq₀ = u₀[3:4]\nprob2 = SecondOrderODEProblem(henon, p₀, q₀, (0., 1000.))\nsol = solve(prob2, DPRKN6(), abstol=1e-10, reltol=1e-10)\n\nplot(sol, vars=[(3,4)], tspan=(0,100))\n\nH(p, q, params) = 1/2 * (p[1]^2 + p[2]^2) + 1/2 * (q[1]^2 + q[2]^2 + 2q[1]^2 * q[2] - 2/3*q[2]^3)\n\nprob3 = HamiltonianProblem(H, p₀, q₀, (0., 1000.))\nsol = solve(prob3, DPRKN6(), abstol=1e-10, reltol=1e-10)\n\nplot(sol, vars=[(3,4)], tspan=(0,100))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-3:-Parallelized-Ensemble-Solving","page":"SciML Workshop Exercise Solutions","title":"Part 3: Parallelized Ensemble Solving","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"In order to solve with an ensamble we need some initial conditions.","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"function generate_ics(E,n)\n  # The hardcoded values bellow can be estimated by looking at the\n  # figures in the Henon-Heiles 1964 article\n  qrange = range(-0.4, stop = 1.0, length = n)\n  prange = range(-0.5, stop = 0.5, length = n)\n  z0 = Vector{Vector{typeof(E)}}()\n  for q in qrange\n    V = H([0,0],[0,q],nothing)\n    V ≥ E && continue\n    for p in prange\n      T = 1/2*p^2\n      T + V ≥ E && continue\n      z = [√(2(E-V-T)), p, 0, q]\n      push!(z0, z)\n    end\n  end\n  return z0\nend\n\nz0 = generate_ics(0.125, 10)\n\nfunction prob_func(prob,i,repeat)\n  @. prob.u0 = z0[i]\n  prob\nend\n\nensprob = EnsembleProblem(prob, prob_func=prob_func)\nsim = solve(ensprob, Vern9(), EnsembleThreads(), trajectories=length(z0))\n\nplot(sim, vars=(3,4), tspan=(0,10))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"(Image: )","category":"page"},{"location":"exercises/02-workshop_solutions/#Part-4:-Parallelized-GPU-Ensemble-Solving","page":"SciML Workshop Exercise Solutions","title":"Part 4: Parallelized GPU Ensemble Solving","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"In order to use GPU parallelization we must make all inputs (initial conditions, tspan, etc.) Float32 and the function definition should be in the in-place form, avoid bound checking and return nothing.","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using DiffEqGPU\n\nfunction henon_gpu(dz,z,p,t)\n  @inbounds begin\n    dz[1] = -z[3]*(1 + 2z[4])\n    dz[2] = -z[4]-(z[3]^2 - z[4]^2)\n    dz[3] = z[1]\n    dz[4] = z[2]\n  end\n  return nothing\nend\n\nz0 = generate_ics(0.125f0, 50)\nprob_gpu = ODEProblem(henon_gpu, Float32.(u₀), (0.f0, 1000.f0))\nensprob = EnsembleProblem(prob_gpu, prob_func=prob_func)\nsim = solve(ensprob, Tsit5(), EnsembleGPUArray(), trajectories=length(z0))","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"EnsembleSolution Solution of length 1440 with uType:\nDiffEqBase.ODESolution{Float32,2,Array{SubArray{Float32,1,Array{Float32,2},\nTuple{Base.Slice{Base.OneTo{Int64}},Int64},true},1},Nothing,Nothing,Array{F\nloat32,1},Nothing,DiffEqBase.ODEProblem{Array{Float32,1},Tuple{Float32,Floa\nt32},true,DiffEqBase.NullParameters,DiffEqBase.ODEFunction{true,typeof(Main\n.##WeaveSandBox#2247.henon_gpu),LinearAlgebra.UniformScaling{Bool},Nothing,\nNothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Nothing,Not\nhing,Nothing},Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tu\nple{}}},DiffEqBase.StandardODEProblem},OrdinaryDiffEq.Tsit5,DiffEqBase.Line\narInterpolation{Array{Float32,1},Array{SubArray{Float32,1,Array{Float32,2},\nTuple{Base.Slice{Base.OneTo{Int64}},Int64},true},1}},DiffEqBase.DEStats}","category":"page"},{"location":"exercises/02-workshop_solutions/#Problem-6:-Training-Neural-Stochastic-Differential-Equations-with-GPU-acceleration-(I)","page":"SciML Workshop Exercise Solutions","title":"Problem 6: Training Neural Stochastic Differential Equations with GPU acceleration (I)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-1:-Constructing-and-Training-a-Basic-Neural-ODE","page":"SciML Workshop Exercise Solutions","title":"Part 1: Constructing and Training a Basic Neural ODE","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-2:-GPU-accelerating-the-Neural-ODE-Process","page":"SciML Workshop Exercise Solutions","title":"Part 2: GPU-accelerating the Neural ODE Process","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-3:-Defining-and-Training-a-Mixed-Neural-ODE","page":"SciML Workshop Exercise Solutions","title":"Part 3: Defining and Training a Mixed Neural ODE","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-4:-Constructing-a-Basic-Neural-SDE","page":"SciML Workshop Exercise Solutions","title":"Part 4: Constructing a Basic Neural SDE","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Part-5:-Optimizing-the-training-behavior-with-minibatching-(E)","page":"SciML Workshop Exercise Solutions","title":"Part 5: Optimizing the training behavior with minibatching (E)","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Information-on-the-Build","page":"SciML Workshop Exercise Solutions","title":"Information on the Build","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/#Appendix","page":"SciML Workshop Exercise Solutions","title":"Appendix","text":"","category":"section"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"This tutorial is part of the SciMLTutorials.jl repository, found at: https://github.com/SciMLTutorials/SciMLTutorials.jl.  For more information on doing scientific machine learning (SciML) with open source software, check out https://sciml.ai/.","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"To locally run this tutorial, do the following commands:","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"using SciMLTutorials\nSciMLTutorials.weave_file(\"exercises\",\"02-workshop_solutions.jmd\")","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Computer Information:","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Julia Version 1.4.2\nCommit 44fa15b150* (2020-05-23 18:35 UTC)\nPlatform Info:\n  OS: Linux (x86_64-pc-linux-gnu)\n  CPU: Intel(R) Core(TM) i7-9700K CPU @ 3.60GHz\n  WORD_SIZE: 64\n  LIBM: libopenlibm\n  LLVM: libLLVM-8.0.1 (ORCJIT, skylake)\nEnvironment:\n  JULIA_LOAD_PATH = /builds/JuliaGPU/DiffEqTutorials.jl:\n  JULIA_DEPOT_PATH = /builds/JuliaGPU/DiffEqTutorials.jl/.julia\n  JULIA_CUDA_MEMORY_LIMIT = 2147483648\n  JULIA_NUM_THREADS = 8\n","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Package Information:","category":"page"},{"location":"exercises/02-workshop_solutions/","page":"SciML Workshop Exercise Solutions","title":"SciML Workshop Exercise Solutions","text":"Status `/builds/JuliaGPU/DiffEqTutorials.jl/tutorials/exercises/Project.toml`\n[2169fc97-5a83-5252-b627-83903c6c433c] AlgebraicMultigrid 0.3.0\n[6e4b80f9-dd63-53aa-95a3-0cdb28fa8baf] BenchmarkTools 0.5.0\n[f3b72e0c-5b89-59e1-b016-84e28bfd966d] DiffEqDevTools 2.24.0\n[aae7a2af-3d4f-5e19-a356-7da93b79d9d0] DiffEqFlux 1.17.0\n[071ae1c0-96b5-11e9-1965-c90190d839ea] DiffEqGPU 1.3.0\n[9fdde737-9c7f-55bf-ade8-46b3f136cc48] DiffEqOperators 4.10.0\n[0c46a032-eb83-5123-abaf-570d42b7fbaa] DifferentialEquations 6.15.0\n[587475ba-b771-5e3f-ad9e-33799f191a9c] Flux 0.10.4\n[429524aa-4258-5aef-a3af-852621145aeb] Optim 0.22.0\n[91a5bcdd-55d7-5caf-9e0b-520d859cae80] Plots 1.5.6\n[47a9eef4-7e08-11e9-0b38-333d64bd3804] SparseDiffTools 1.9.1\n[684fba80-ace3-11e9-3d08-3bc7ed6f96df] SparsityDetection 0.3.3\n[c3572dad-4567-51f8-b174-8c6c989267f4] Sundials 4.2.5","category":"page"},{"location":"#SciMLTutorials.jl:-Tutorials-for-Scientific-Machine-Learning-and-Differential-Equations","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning and Differential Equations","text":"","category":"section"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"(Image: Join the chat at https://julialang.zulipchat.com #sciml-bridged) (Image: Global Docs)","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"(Image: Build status)","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"(Image: ColPrac: Contributor's Guide on Collaborative Practices for Community Packages) (Image: SciML Code Style)","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"SciMLTutorials.jl holds PDFs, webpages, and interactive Jupyter notebooks showing how to utilize the software in the SciML Scientific Machine Learning ecosystem. This set of tutorials was made to complement the documentation and the devdocs by providing practical examples of the concepts. For more details, please consult the docs.","category":"page"},{"location":"#Results","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"Results","text":"","category":"section"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"To view the SciML Tutorials, go to tutorials.sciml.ai. By default, this will lead to the latest tagged version of the tutorials. To see the in-development version of the tutorials, go to https://tutorials.sciml.ai/dev/.","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"Static outputs in pdf, markdown, and html reside in SciMLTutorialsOutput.","category":"page"},{"location":"#Video-Tutorial","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"Video Tutorial","text":"","category":"section"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"(Image: Video Tutorial)","category":"page"},{"location":"#Interactive-Notebooks","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"Interactive Notebooks","text":"","category":"section"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"To generate the interactive notebooks, first install the SciMLTutorials, instantiate the environment, and then run SciMLTutorials.open_notebooks(). This looks as follows:","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"]add SciMLTutorials#master\n]activate SciMLTutorials\n]instantiate\nusing SciMLTutorials\nSciMLTutorials.open_notebooks()","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"The tutorials will be generated at your pwd() in a folder called generated_notebooks.","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"Note that when running the tutorials, the packages are not automatically added. Thus you will need to add the packages manually or use the internal Project/Manifest tomls to instantiate the correct packages. This can be done by activating the folder of the tutorials. For example,","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"using Pkg\nPkg.activate(joinpath(pkgdir(SciMLTutorials),\"tutorials\",\"models\"))\nPkg.instantiate()","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"will add all of the packages required to run any tutorial in the models folder.","category":"page"},{"location":"#Contributing","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"Contributing","text":"","category":"section"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"All of the files are generated from the Weave.jl files in the tutorials folder. The generation process runs automatically, and thus one does not necessarily need to test the Weave process locally. Instead, simply open a PR that adds/updates a file in the \"tutorials\" folder and the PR will generate the tutorial on demand. Its artifacts can then be inspected in the Buildkite as described below before merging. Note that it will use the Project.toml and Manifest.toml of the subfolder, so any changes to dependencies requires that those are updated.","category":"page"},{"location":"#Reporting-Bugs-and-Issues","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"Reporting Bugs and Issues","text":"","category":"section"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"Report any bugs or issues at the SciMLTutorials repository.","category":"page"},{"location":"#Inspecting-Tutorial-Results","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"Inspecting Tutorial Results","text":"","category":"section"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"To see tutorial results before merging, click into the BuildKite, click onto Artifacts, and then investigate the trained results.","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"(Image: )","category":"page"},{"location":"#Manually-Generating-Files","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"Manually Generating Files","text":"","category":"section"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"To run the generation process, do for example:","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"]activate SciMLTutorials # Get all of the packages\nusing SciMLTutorials\nSciMLTutorials.weave_file(joinpath(pkgdir(SciMLTutorials),\"tutorials\",\"models\"),\"01-classical_physics.jmd\")","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"To generate all of the files in a folder, for example, run:","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"SciMLTutorials.weave_folder(joinpath(pkgdir(SciMLTutorials),\"tutorials\",\"models\"))","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"To generate all of the notebooks, do:","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"SciMLTutorials.weave_all()","category":"page"},{"location":"","page":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","title":"SciMLTutorials.jl: Tutorials for Scientific Machine Learning (SciML) and Equation Solvers","text":"Each of the tuturials displays the computer characteristics at the bottom of the benchmark.","category":"page"}]
}
